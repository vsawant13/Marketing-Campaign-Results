{"cells":[{"cell_type":"markdown","metadata":{"id":"R2A7Xpv5AE60"},"source":["### `Importing libraries`"]},{"cell_type":"code","execution_count":1,"metadata":{"id":"RqmtGi3gYiTh","executionInfo":{"status":"ok","timestamp":1718869202777,"user_tz":-330,"elapsed":4116,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","pd.set_option('display.max_columns',50)"]},{"cell_type":"markdown","metadata":{"id":"K20-c5enAKnr"},"source":["### `Importing Data`"]},{"cell_type":"code","execution_count":2,"metadata":{"id":"v9LbB_F6X27Z","executionInfo":{"status":"ok","timestamp":1718869202778,"user_tz":-330,"elapsed":14,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}}},"outputs":[],"source":["df = pd.read_csv('/content/drive/MyDrive/DATASETS/marketing_data.csv')"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"executionInfo":{"elapsed":13,"status":"ok","timestamp":1718869202778,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"zLgpy657Yglq","outputId":"b365b589-eb9d-44fc-dd5f-3f9d90ce4785"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["         ID  Year_Birth   Education Marital_Status   Income   Kidhome  \\\n","0      1826        1970  Graduation       Divorced   84835.0        0   \n","1         1        1961  Graduation         Single   57091.0        0   \n","2     10476        1958  Graduation        Married   67267.0        0   \n","3      1386        1967  Graduation       Together   32474.0        1   \n","4      5371        1989  Graduation         Single   21474.0        1   \n","...     ...         ...         ...            ...       ...      ...   \n","2235  10142        1976         PhD       Divorced   66476.0        0   \n","2236   5263        1977    2n Cycle        Married   31056.0        1   \n","2237     22        1976  Graduation       Divorced   46310.0        1   \n","2238    528        1978  Graduation        Married   65819.0        0   \n","2239   4070        1969         PhD        Married   94871.0        0   \n","\n","      Teenhome Dt_Customer  Recency  MntWines  MntFruits  MntMeatProducts  \\\n","0            0  2014-06-16        0       189        104              379   \n","1            0  2014-06-15        0       464          5               64   \n","2            1  2014-05-13        0       134         11               59   \n","3            1  2014-05-11        0        10          0                1   \n","4            0  2014-04-08        0         6         16               24   \n","...        ...         ...      ...       ...        ...              ...   \n","2235         1  2013-03-07       99       372         18              126   \n","2236         0  2013-01-22       99         5         10               13   \n","2237         0  2012-12-03       99       185          2               88   \n","2238         0  2012-11-29       99       267         38              701   \n","2239         2  2012-09-01       99       169         24              553   \n","\n","      MntFishProducts  MntSweetProducts  MntGoldProds  NumDealsPurchases  \\\n","0                 111               189           218                  1   \n","1                   7                 0            37                  1   \n","2                  15                 2            30                  1   \n","3                   0                 0             0                  1   \n","4                  11                 0            34                  2   \n","...               ...               ...           ...                ...   \n","2235               47                48            78                  2   \n","2236                3                 8            16                  1   \n","2237               15                 5            14                  2   \n","2238              149               165            63                  1   \n","2239              188                 0           144                  1   \n","\n","      NumWebPurchases  NumCatalogPurchases  NumStorePurchases  \\\n","0                   4                    4                  6   \n","1                   7                    3                  7   \n","2                   3                    2                  5   \n","3                   1                    0                  2   \n","4                   3                    1                  2   \n","...               ...                  ...                ...   \n","2235                5                    2                 11   \n","2236                1                    0                  3   \n","2237                6                    1                  5   \n","2238                5                    4                 10   \n","2239                8                    5                  4   \n","\n","      NumWebVisitsMonth  AcceptedCmp3  AcceptedCmp4  AcceptedCmp5  \\\n","0                     1             0             0             0   \n","1                     5             0             0             0   \n","2                     2             0             0             0   \n","3                     7             0             0             0   \n","4                     7             1             0             0   \n","...                 ...           ...           ...           ...   \n","2235                  4             0             0             0   \n","2236                  8             0             0             0   \n","2237                  8             0             0             0   \n","2238                  3             0             0             0   \n","2239                  7             0             1             1   \n","\n","      AcceptedCmp1  AcceptedCmp2  Response  Complain    Country  \n","0                0             0         1         0      Spain  \n","1                0             1         1         0     Canada  \n","2                0             0         0         0        USA  \n","3                0             0         0         0  Australia  \n","4                0             0         1         0      Spain  \n","...            ...           ...       ...       ...        ...  \n","2235             0             0         0         0        USA  \n","2236             0             0         0         0      Spain  \n","2237             0             0         0         0      Spain  \n","2238             0             0         0         0      India  \n","2239             0             0         1         0     Canada  \n","\n","[2240 rows x 28 columns]"],"text/html":["\n","  <div id=\"df-d902a41c-6d1b-4ba4-a5df-2bf70aa4947c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Year_Birth</th>\n","      <th>Education</th>\n","      <th>Marital_Status</th>\n","      <th>Income</th>\n","      <th>Kidhome</th>\n","      <th>Teenhome</th>\n","      <th>Dt_Customer</th>\n","      <th>Recency</th>\n","      <th>MntWines</th>\n","      <th>MntFruits</th>\n","      <th>MntMeatProducts</th>\n","      <th>MntFishProducts</th>\n","      <th>MntSweetProducts</th>\n","      <th>MntGoldProds</th>\n","      <th>NumDealsPurchases</th>\n","      <th>NumWebPurchases</th>\n","      <th>NumCatalogPurchases</th>\n","      <th>NumStorePurchases</th>\n","      <th>NumWebVisitsMonth</th>\n","      <th>AcceptedCmp3</th>\n","      <th>AcceptedCmp4</th>\n","      <th>AcceptedCmp5</th>\n","      <th>AcceptedCmp1</th>\n","      <th>AcceptedCmp2</th>\n","      <th>Response</th>\n","      <th>Complain</th>\n","      <th>Country</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1826</td>\n","      <td>1970</td>\n","      <td>Graduation</td>\n","      <td>Divorced</td>\n","      <td>84835.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2014-06-16</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>104</td>\n","      <td>379</td>\n","      <td>111</td>\n","      <td>189</td>\n","      <td>218</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1961</td>\n","      <td>Graduation</td>\n","      <td>Single</td>\n","      <td>57091.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2014-06-15</td>\n","      <td>0</td>\n","      <td>464</td>\n","      <td>5</td>\n","      <td>64</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>37</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Canada</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10476</td>\n","      <td>1958</td>\n","      <td>Graduation</td>\n","      <td>Married</td>\n","      <td>67267.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2014-05-13</td>\n","      <td>0</td>\n","      <td>134</td>\n","      <td>11</td>\n","      <td>59</td>\n","      <td>15</td>\n","      <td>2</td>\n","      <td>30</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>USA</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1386</td>\n","      <td>1967</td>\n","      <td>Graduation</td>\n","      <td>Together</td>\n","      <td>32474.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2014-05-11</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Australia</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5371</td>\n","      <td>1989</td>\n","      <td>Graduation</td>\n","      <td>Single</td>\n","      <td>21474.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2014-04-08</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>16</td>\n","      <td>24</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>34</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2235</th>\n","      <td>10142</td>\n","      <td>1976</td>\n","      <td>PhD</td>\n","      <td>Divorced</td>\n","      <td>66476.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2013-03-07</td>\n","      <td>99</td>\n","      <td>372</td>\n","      <td>18</td>\n","      <td>126</td>\n","      <td>47</td>\n","      <td>48</td>\n","      <td>78</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>USA</td>\n","    </tr>\n","    <tr>\n","      <th>2236</th>\n","      <td>5263</td>\n","      <td>1977</td>\n","      <td>2n Cycle</td>\n","      <td>Married</td>\n","      <td>31056.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2013-01-22</td>\n","      <td>99</td>\n","      <td>5</td>\n","      <td>10</td>\n","      <td>13</td>\n","      <td>3</td>\n","      <td>8</td>\n","      <td>16</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","    </tr>\n","    <tr>\n","      <th>2237</th>\n","      <td>22</td>\n","      <td>1976</td>\n","      <td>Graduation</td>\n","      <td>Divorced</td>\n","      <td>46310.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2012-12-03</td>\n","      <td>99</td>\n","      <td>185</td>\n","      <td>2</td>\n","      <td>88</td>\n","      <td>15</td>\n","      <td>5</td>\n","      <td>14</td>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","    </tr>\n","    <tr>\n","      <th>2238</th>\n","      <td>528</td>\n","      <td>1978</td>\n","      <td>Graduation</td>\n","      <td>Married</td>\n","      <td>65819.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2012-11-29</td>\n","      <td>99</td>\n","      <td>267</td>\n","      <td>38</td>\n","      <td>701</td>\n","      <td>149</td>\n","      <td>165</td>\n","      <td>63</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>10</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>India</td>\n","    </tr>\n","    <tr>\n","      <th>2239</th>\n","      <td>4070</td>\n","      <td>1969</td>\n","      <td>PhD</td>\n","      <td>Married</td>\n","      <td>94871.0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2012-09-01</td>\n","      <td>99</td>\n","      <td>169</td>\n","      <td>24</td>\n","      <td>553</td>\n","      <td>188</td>\n","      <td>0</td>\n","      <td>144</td>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Canada</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2240 rows × 28 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d902a41c-6d1b-4ba4-a5df-2bf70aa4947c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d902a41c-6d1b-4ba4-a5df-2bf70aa4947c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d902a41c-6d1b-4ba4-a5df-2bf70aa4947c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f8f0b663-0608-42ff-8fca-cf6874e392ee\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f8f0b663-0608-42ff-8fca-cf6874e392ee')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f8f0b663-0608-42ff-8fca-cf6874e392ee button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":3}],"source":["df"]},{"cell_type":"code","execution_count":69,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":437,"status":"ok","timestamp":1718869327405,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"6B_kR8PnrKHB","outputId":"036e1e33-0bfc-45b1-edb5-17f985c79dbc"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['ID', 'Year_Birth', 'Education', 'Marital_Status', 'Income',\n","       'Dt_Customer', 'Recency', 'MntWines', 'MntFruits', 'MntMeatProducts',\n","       'MntFishProducts', 'MntSweetProducts', 'MntGoldProds',\n","       'NumDealsPurchases', 'NumWebPurchases', 'NumCatalogPurchases',\n","       'NumStorePurchases', 'NumWebVisitsMonth', 'AcceptedCmp3',\n","       'AcceptedCmp4', 'AcceptedCmp5', 'AcceptedCmp1', 'AcceptedCmp2',\n","       'Response', 'Complain', 'Country', 'Age', 'childhome'],\n","      dtype='object')"]},"metadata":{},"execution_count":69}],"source":["df.columns"]},{"cell_type":"code","execution_count":5,"metadata":{"id":"GLDb3iVnBuix","executionInfo":{"status":"ok","timestamp":1718869202779,"user_tz":-330,"elapsed":9,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}}},"outputs":[],"source":["df.rename(columns = {' Income ':'Income'}, inplace = True)                          #renamed the 'Income' column"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"executionInfo":{"elapsed":1801,"status":"ok","timestamp":1718869204572,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"DWnqCCUDo87G","outputId":"b8e8d25a-3cf8-4fe6-d9f3-32793e6ba101"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      ID  Year_Birth   Education Marital_Status   Income  Kidhome  Teenhome  \\\n","0   1826        1970  Graduation       Divorced  84835.0        0         0   \n","1      1        1961  Graduation         Single  57091.0        0         0   \n","2  10476        1958  Graduation        Married  67267.0        0         1   \n","3   1386        1967  Graduation       Together  32474.0        1         1   \n","4   5371        1989  Graduation         Single  21474.0        1         0   \n","\n","  Dt_Customer  Recency  MntWines  MntFruits  MntMeatProducts  MntFishProducts  \\\n","0  2014-06-16        0       189        104              379              111   \n","1  2014-06-15        0       464          5               64                7   \n","2  2014-05-13        0       134         11               59               15   \n","3  2014-05-11        0        10          0                1                0   \n","4  2014-04-08        0         6         16               24               11   \n","\n","   MntSweetProducts  MntGoldProds  NumDealsPurchases  NumWebPurchases  \\\n","0               189           218                  1                4   \n","1                 0            37                  1                7   \n","2                 2            30                  1                3   \n","3                 0             0                  1                1   \n","4                 0            34                  2                3   \n","\n","   NumCatalogPurchases  NumStorePurchases  NumWebVisitsMonth  AcceptedCmp3  \\\n","0                    4                  6                  1             0   \n","1                    3                  7                  5             0   \n","2                    2                  5                  2             0   \n","3                    0                  2                  7             0   \n","4                    1                  2                  7             1   \n","\n","   AcceptedCmp4  AcceptedCmp5  AcceptedCmp1  AcceptedCmp2  Response  Complain  \\\n","0             0             0             0             0         1         0   \n","1             0             0             0             1         1         0   \n","2             0             0             0             0         0         0   \n","3             0             0             0             0         0         0   \n","4             0             0             0             0         1         0   \n","\n","     Country  \n","0      Spain  \n","1     Canada  \n","2        USA  \n","3  Australia  \n","4      Spain  "],"text/html":["\n","  <div id=\"df-5a4bd002-397a-43bc-9afe-87c50b0210e2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Year_Birth</th>\n","      <th>Education</th>\n","      <th>Marital_Status</th>\n","      <th>Income</th>\n","      <th>Kidhome</th>\n","      <th>Teenhome</th>\n","      <th>Dt_Customer</th>\n","      <th>Recency</th>\n","      <th>MntWines</th>\n","      <th>MntFruits</th>\n","      <th>MntMeatProducts</th>\n","      <th>MntFishProducts</th>\n","      <th>MntSweetProducts</th>\n","      <th>MntGoldProds</th>\n","      <th>NumDealsPurchases</th>\n","      <th>NumWebPurchases</th>\n","      <th>NumCatalogPurchases</th>\n","      <th>NumStorePurchases</th>\n","      <th>NumWebVisitsMonth</th>\n","      <th>AcceptedCmp3</th>\n","      <th>AcceptedCmp4</th>\n","      <th>AcceptedCmp5</th>\n","      <th>AcceptedCmp1</th>\n","      <th>AcceptedCmp2</th>\n","      <th>Response</th>\n","      <th>Complain</th>\n","      <th>Country</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1826</td>\n","      <td>1970</td>\n","      <td>Graduation</td>\n","      <td>Divorced</td>\n","      <td>84835.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2014-06-16</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>104</td>\n","      <td>379</td>\n","      <td>111</td>\n","      <td>189</td>\n","      <td>218</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1961</td>\n","      <td>Graduation</td>\n","      <td>Single</td>\n","      <td>57091.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2014-06-15</td>\n","      <td>0</td>\n","      <td>464</td>\n","      <td>5</td>\n","      <td>64</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>37</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Canada</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10476</td>\n","      <td>1958</td>\n","      <td>Graduation</td>\n","      <td>Married</td>\n","      <td>67267.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2014-05-13</td>\n","      <td>0</td>\n","      <td>134</td>\n","      <td>11</td>\n","      <td>59</td>\n","      <td>15</td>\n","      <td>2</td>\n","      <td>30</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>USA</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1386</td>\n","      <td>1967</td>\n","      <td>Graduation</td>\n","      <td>Together</td>\n","      <td>32474.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2014-05-11</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Australia</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5371</td>\n","      <td>1989</td>\n","      <td>Graduation</td>\n","      <td>Single</td>\n","      <td>21474.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2014-04-08</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>16</td>\n","      <td>24</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>34</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5a4bd002-397a-43bc-9afe-87c50b0210e2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5a4bd002-397a-43bc-9afe-87c50b0210e2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5a4bd002-397a-43bc-9afe-87c50b0210e2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-779b4a3c-da40-408f-800d-049bb11038af\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-779b4a3c-da40-408f-800d-049bb11038af')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-779b4a3c-da40-408f-800d-049bb11038af button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":6}],"source":["df.head()"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"executionInfo":{"elapsed":19,"status":"ok","timestamp":1718869204573,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"HFGO8hXKo_nF","outputId":"a4eb456a-9ed2-4bab-95cc-205dca3d884a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["         ID  Year_Birth   Education Marital_Status   Income  Kidhome  \\\n","2235  10142        1976         PhD       Divorced  66476.0        0   \n","2236   5263        1977    2n Cycle        Married  31056.0        1   \n","2237     22        1976  Graduation       Divorced  46310.0        1   \n","2238    528        1978  Graduation        Married  65819.0        0   \n","2239   4070        1969         PhD        Married  94871.0        0   \n","\n","      Teenhome Dt_Customer  Recency  MntWines  MntFruits  MntMeatProducts  \\\n","2235         1  2013-03-07       99       372         18              126   \n","2236         0  2013-01-22       99         5         10               13   \n","2237         0  2012-12-03       99       185          2               88   \n","2238         0  2012-11-29       99       267         38              701   \n","2239         2  2012-09-01       99       169         24              553   \n","\n","      MntFishProducts  MntSweetProducts  MntGoldProds  NumDealsPurchases  \\\n","2235               47                48            78                  2   \n","2236                3                 8            16                  1   \n","2237               15                 5            14                  2   \n","2238              149               165            63                  1   \n","2239              188                 0           144                  1   \n","\n","      NumWebPurchases  NumCatalogPurchases  NumStorePurchases  \\\n","2235                5                    2                 11   \n","2236                1                    0                  3   \n","2237                6                    1                  5   \n","2238                5                    4                 10   \n","2239                8                    5                  4   \n","\n","      NumWebVisitsMonth  AcceptedCmp3  AcceptedCmp4  AcceptedCmp5  \\\n","2235                  4             0             0             0   \n","2236                  8             0             0             0   \n","2237                  8             0             0             0   \n","2238                  3             0             0             0   \n","2239                  7             0             1             1   \n","\n","      AcceptedCmp1  AcceptedCmp2  Response  Complain Country  \n","2235             0             0         0         0     USA  \n","2236             0             0         0         0   Spain  \n","2237             0             0         0         0   Spain  \n","2238             0             0         0         0   India  \n","2239             0             0         1         0  Canada  "],"text/html":["\n","  <div id=\"df-00c3ea31-d809-46ff-838d-e39cb47917ed\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Year_Birth</th>\n","      <th>Education</th>\n","      <th>Marital_Status</th>\n","      <th>Income</th>\n","      <th>Kidhome</th>\n","      <th>Teenhome</th>\n","      <th>Dt_Customer</th>\n","      <th>Recency</th>\n","      <th>MntWines</th>\n","      <th>MntFruits</th>\n","      <th>MntMeatProducts</th>\n","      <th>MntFishProducts</th>\n","      <th>MntSweetProducts</th>\n","      <th>MntGoldProds</th>\n","      <th>NumDealsPurchases</th>\n","      <th>NumWebPurchases</th>\n","      <th>NumCatalogPurchases</th>\n","      <th>NumStorePurchases</th>\n","      <th>NumWebVisitsMonth</th>\n","      <th>AcceptedCmp3</th>\n","      <th>AcceptedCmp4</th>\n","      <th>AcceptedCmp5</th>\n","      <th>AcceptedCmp1</th>\n","      <th>AcceptedCmp2</th>\n","      <th>Response</th>\n","      <th>Complain</th>\n","      <th>Country</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2235</th>\n","      <td>10142</td>\n","      <td>1976</td>\n","      <td>PhD</td>\n","      <td>Divorced</td>\n","      <td>66476.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2013-03-07</td>\n","      <td>99</td>\n","      <td>372</td>\n","      <td>18</td>\n","      <td>126</td>\n","      <td>47</td>\n","      <td>48</td>\n","      <td>78</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>USA</td>\n","    </tr>\n","    <tr>\n","      <th>2236</th>\n","      <td>5263</td>\n","      <td>1977</td>\n","      <td>2n Cycle</td>\n","      <td>Married</td>\n","      <td>31056.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2013-01-22</td>\n","      <td>99</td>\n","      <td>5</td>\n","      <td>10</td>\n","      <td>13</td>\n","      <td>3</td>\n","      <td>8</td>\n","      <td>16</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","    </tr>\n","    <tr>\n","      <th>2237</th>\n","      <td>22</td>\n","      <td>1976</td>\n","      <td>Graduation</td>\n","      <td>Divorced</td>\n","      <td>46310.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2012-12-03</td>\n","      <td>99</td>\n","      <td>185</td>\n","      <td>2</td>\n","      <td>88</td>\n","      <td>15</td>\n","      <td>5</td>\n","      <td>14</td>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","    </tr>\n","    <tr>\n","      <th>2238</th>\n","      <td>528</td>\n","      <td>1978</td>\n","      <td>Graduation</td>\n","      <td>Married</td>\n","      <td>65819.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2012-11-29</td>\n","      <td>99</td>\n","      <td>267</td>\n","      <td>38</td>\n","      <td>701</td>\n","      <td>149</td>\n","      <td>165</td>\n","      <td>63</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>10</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>India</td>\n","    </tr>\n","    <tr>\n","      <th>2239</th>\n","      <td>4070</td>\n","      <td>1969</td>\n","      <td>PhD</td>\n","      <td>Married</td>\n","      <td>94871.0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2012-09-01</td>\n","      <td>99</td>\n","      <td>169</td>\n","      <td>24</td>\n","      <td>553</td>\n","      <td>188</td>\n","      <td>0</td>\n","      <td>144</td>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Canada</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-00c3ea31-d809-46ff-838d-e39cb47917ed')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-00c3ea31-d809-46ff-838d-e39cb47917ed button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-00c3ea31-d809-46ff-838d-e39cb47917ed');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-18981c39-c817-497d-a9e3-ac20ed364f9f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-18981c39-c817-497d-a9e3-ac20ed364f9f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-18981c39-c817-497d-a9e3-ac20ed364f9f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":7}],"source":["df.tail()"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":18,"status":"ok","timestamp":1718869204573,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"Uwgu6kGpaAoO","outputId":"9b551127-87bf-4341-c136-a4ec0d602e6a"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 2240 entries, 0 to 2239\n","Data columns (total 28 columns):\n"," #   Column               Non-Null Count  Dtype  \n","---  ------               --------------  -----  \n"," 0   ID                   2240 non-null   int64  \n"," 1   Year_Birth           2240 non-null   int64  \n"," 2   Education            2240 non-null   object \n"," 3   Marital_Status       2240 non-null   object \n"," 4   Income               2216 non-null   float64\n"," 5   Kidhome              2240 non-null   int64  \n"," 6   Teenhome             2240 non-null   int64  \n"," 7   Dt_Customer          2240 non-null   object \n"," 8   Recency              2240 non-null   int64  \n"," 9   MntWines             2240 non-null   int64  \n"," 10  MntFruits            2240 non-null   int64  \n"," 11  MntMeatProducts      2240 non-null   int64  \n"," 12  MntFishProducts      2240 non-null   int64  \n"," 13  MntSweetProducts     2240 non-null   int64  \n"," 14  MntGoldProds         2240 non-null   int64  \n"," 15  NumDealsPurchases    2240 non-null   int64  \n"," 16  NumWebPurchases      2240 non-null   int64  \n"," 17  NumCatalogPurchases  2240 non-null   int64  \n"," 18  NumStorePurchases    2240 non-null   int64  \n"," 19  NumWebVisitsMonth    2240 non-null   int64  \n"," 20  AcceptedCmp3         2240 non-null   int64  \n"," 21  AcceptedCmp4         2240 non-null   int64  \n"," 22  AcceptedCmp5         2240 non-null   int64  \n"," 23  AcceptedCmp1         2240 non-null   int64  \n"," 24  AcceptedCmp2         2240 non-null   int64  \n"," 25  Response             2240 non-null   int64  \n"," 26  Complain             2240 non-null   int64  \n"," 27  Country              2240 non-null   object \n","dtypes: float64(1), int64(23), object(4)\n","memory usage: 490.1+ KB\n"]}],"source":["df.info()"]},{"cell_type":"markdown","metadata":{"id":"wyabgGnUCfQg"},"source":["### `Changing datatype for Dt_Customer`"]},{"cell_type":"code","execution_count":9,"metadata":{"id":"br1EVwCZCpQn","executionInfo":{"status":"ok","timestamp":1718869204574,"user_tz":-330,"elapsed":15,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}}},"outputs":[],"source":["df['Dt_Customer'] = pd.to_datetime(df['Dt_Customer'])"]},{"cell_type":"markdown","metadata":{"id":"hSSVSZPWCRIo"},"source":["### `Checking for duplicate values`"]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":15,"status":"ok","timestamp":1718869204574,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"D7wYIcHECWto","outputId":"e6db0e0d-2894-42c8-eabd-28ec4a806776"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":10}],"source":["df.duplicated().sum()                             #df.drop_duplicates.(if there are any duplicate value)"]},{"cell_type":"markdown","metadata":{"id":"sPbUHR7BAR_K"},"source":["### `Checking for outliers`"]},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"elapsed":13,"status":"ok","timestamp":1718869204574,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"Zr7N5PuCn_6o","outputId":"2feeb446-21f4-46a6-9e96-7a7ff85ab59c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 ID   Year_Birth         Income      Kidhome     Teenhome  \\\n","count   2240.000000  2240.000000    2216.000000  2240.000000  2240.000000   \n","mean    5592.159821  1968.805804   52247.251354     0.444196     0.506250   \n","min        0.000000  1893.000000    1730.000000     0.000000     0.000000   \n","25%     2828.250000  1959.000000   35303.000000     0.000000     0.000000   \n","50%     5458.500000  1970.000000   51381.500000     0.000000     0.000000   \n","75%     8427.750000  1977.000000   68522.000000     1.000000     1.000000   \n","max    11191.000000  1996.000000  666666.000000     2.000000     2.000000   \n","std     3246.662198    11.984069   25173.076661     0.538398     0.544538   \n","\n","                         Dt_Customer      Recency     MntWines    MntFruits  \\\n","count                           2240  2240.000000  2240.000000  2240.000000   \n","mean   2013-07-10 10:01:42.857142784    49.109375   303.935714    26.302232   \n","min              2012-07-30 00:00:00     0.000000     0.000000     0.000000   \n","25%              2013-01-16 00:00:00    24.000000    23.750000     1.000000   \n","50%              2013-07-08 12:00:00    49.000000   173.500000     8.000000   \n","75%              2013-12-30 06:00:00    74.000000   504.250000    33.000000   \n","max              2014-06-29 00:00:00    99.000000  1493.000000   199.000000   \n","std                              NaN    28.962453   336.597393    39.773434   \n","\n","       MntMeatProducts  MntFishProducts  MntSweetProducts  MntGoldProds  \\\n","count      2240.000000      2240.000000       2240.000000   2240.000000   \n","mean        166.950000        37.525446         27.062946     44.021875   \n","min           0.000000         0.000000          0.000000      0.000000   \n","25%          16.000000         3.000000          1.000000      9.000000   \n","50%          67.000000        12.000000          8.000000     24.000000   \n","75%         232.000000        50.000000         33.000000     56.000000   \n","max        1725.000000       259.000000        263.000000    362.000000   \n","std         225.715373        54.628979         41.280498     52.167439   \n","\n","       NumDealsPurchases  NumWebPurchases  NumCatalogPurchases  \\\n","count        2240.000000      2240.000000          2240.000000   \n","mean            2.325000         4.084821             2.662054   \n","min             0.000000         0.000000             0.000000   \n","25%             1.000000         2.000000             0.000000   \n","50%             2.000000         4.000000             2.000000   \n","75%             3.000000         6.000000             4.000000   \n","max            15.000000        27.000000            28.000000   \n","std             1.932238         2.778714             2.923101   \n","\n","       NumStorePurchases  NumWebVisitsMonth  AcceptedCmp3  AcceptedCmp4  \\\n","count        2240.000000        2240.000000   2240.000000   2240.000000   \n","mean            5.790179           5.316518      0.072768      0.074554   \n","min             0.000000           0.000000      0.000000      0.000000   \n","25%             3.000000           3.000000      0.000000      0.000000   \n","50%             5.000000           6.000000      0.000000      0.000000   \n","75%             8.000000           7.000000      0.000000      0.000000   \n","max            13.000000          20.000000      1.000000      1.000000   \n","std             3.250958           2.426645      0.259813      0.262728   \n","\n","       AcceptedCmp5  AcceptedCmp1  AcceptedCmp2     Response     Complain  \n","count   2240.000000   2240.000000   2240.000000  2240.000000  2240.000000  \n","mean       0.072768      0.064286      0.013393     0.149107     0.009375  \n","min        0.000000      0.000000      0.000000     0.000000     0.000000  \n","25%        0.000000      0.000000      0.000000     0.000000     0.000000  \n","50%        0.000000      0.000000      0.000000     0.000000     0.000000  \n","75%        0.000000      0.000000      0.000000     0.000000     0.000000  \n","max        1.000000      1.000000      1.000000     1.000000     1.000000  \n","std        0.259813      0.245316      0.114976     0.356274     0.096391  "],"text/html":["\n","  <div id=\"df-38530e3f-abea-48fd-b3d6-1119fe9bd603\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Year_Birth</th>\n","      <th>Income</th>\n","      <th>Kidhome</th>\n","      <th>Teenhome</th>\n","      <th>Dt_Customer</th>\n","      <th>Recency</th>\n","      <th>MntWines</th>\n","      <th>MntFruits</th>\n","      <th>MntMeatProducts</th>\n","      <th>MntFishProducts</th>\n","      <th>MntSweetProducts</th>\n","      <th>MntGoldProds</th>\n","      <th>NumDealsPurchases</th>\n","      <th>NumWebPurchases</th>\n","      <th>NumCatalogPurchases</th>\n","      <th>NumStorePurchases</th>\n","      <th>NumWebVisitsMonth</th>\n","      <th>AcceptedCmp3</th>\n","      <th>AcceptedCmp4</th>\n","      <th>AcceptedCmp5</th>\n","      <th>AcceptedCmp1</th>\n","      <th>AcceptedCmp2</th>\n","      <th>Response</th>\n","      <th>Complain</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2216.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>5592.159821</td>\n","      <td>1968.805804</td>\n","      <td>52247.251354</td>\n","      <td>0.444196</td>\n","      <td>0.506250</td>\n","      <td>2013-07-10 10:01:42.857142784</td>\n","      <td>49.109375</td>\n","      <td>303.935714</td>\n","      <td>26.302232</td>\n","      <td>166.950000</td>\n","      <td>37.525446</td>\n","      <td>27.062946</td>\n","      <td>44.021875</td>\n","      <td>2.325000</td>\n","      <td>4.084821</td>\n","      <td>2.662054</td>\n","      <td>5.790179</td>\n","      <td>5.316518</td>\n","      <td>0.072768</td>\n","      <td>0.074554</td>\n","      <td>0.072768</td>\n","      <td>0.064286</td>\n","      <td>0.013393</td>\n","      <td>0.149107</td>\n","      <td>0.009375</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>1893.000000</td>\n","      <td>1730.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2012-07-30 00:00:00</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2828.250000</td>\n","      <td>1959.000000</td>\n","      <td>35303.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2013-01-16 00:00:00</td>\n","      <td>24.000000</td>\n","      <td>23.750000</td>\n","      <td>1.000000</td>\n","      <td>16.000000</td>\n","      <td>3.000000</td>\n","      <td>1.000000</td>\n","      <td>9.000000</td>\n","      <td>1.000000</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>3.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>5458.500000</td>\n","      <td>1970.000000</td>\n","      <td>51381.500000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2013-07-08 12:00:00</td>\n","      <td>49.000000</td>\n","      <td>173.500000</td>\n","      <td>8.000000</td>\n","      <td>67.000000</td>\n","      <td>12.000000</td>\n","      <td>8.000000</td>\n","      <td>24.000000</td>\n","      <td>2.000000</td>\n","      <td>4.000000</td>\n","      <td>2.000000</td>\n","      <td>5.000000</td>\n","      <td>6.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>8427.750000</td>\n","      <td>1977.000000</td>\n","      <td>68522.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>2013-12-30 06:00:00</td>\n","      <td>74.000000</td>\n","      <td>504.250000</td>\n","      <td>33.000000</td>\n","      <td>232.000000</td>\n","      <td>50.000000</td>\n","      <td>33.000000</td>\n","      <td>56.000000</td>\n","      <td>3.000000</td>\n","      <td>6.000000</td>\n","      <td>4.000000</td>\n","      <td>8.000000</td>\n","      <td>7.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>11191.000000</td>\n","      <td>1996.000000</td>\n","      <td>666666.000000</td>\n","      <td>2.000000</td>\n","      <td>2.000000</td>\n","      <td>2014-06-29 00:00:00</td>\n","      <td>99.000000</td>\n","      <td>1493.000000</td>\n","      <td>199.000000</td>\n","      <td>1725.000000</td>\n","      <td>259.000000</td>\n","      <td>263.000000</td>\n","      <td>362.000000</td>\n","      <td>15.000000</td>\n","      <td>27.000000</td>\n","      <td>28.000000</td>\n","      <td>13.000000</td>\n","      <td>20.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>3246.662198</td>\n","      <td>11.984069</td>\n","      <td>25173.076661</td>\n","      <td>0.538398</td>\n","      <td>0.544538</td>\n","      <td>NaN</td>\n","      <td>28.962453</td>\n","      <td>336.597393</td>\n","      <td>39.773434</td>\n","      <td>225.715373</td>\n","      <td>54.628979</td>\n","      <td>41.280498</td>\n","      <td>52.167439</td>\n","      <td>1.932238</td>\n","      <td>2.778714</td>\n","      <td>2.923101</td>\n","      <td>3.250958</td>\n","      <td>2.426645</td>\n","      <td>0.259813</td>\n","      <td>0.262728</td>\n","      <td>0.259813</td>\n","      <td>0.245316</td>\n","      <td>0.114976</td>\n","      <td>0.356274</td>\n","      <td>0.096391</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-38530e3f-abea-48fd-b3d6-1119fe9bd603')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-38530e3f-abea-48fd-b3d6-1119fe9bd603 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-38530e3f-abea-48fd-b3d6-1119fe9bd603');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-dfb81567-3f2f-4563-bf4a-5e2cc3f42419\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dfb81567-3f2f-4563-bf4a-5e2cc3f42419')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-dfb81567-3f2f-4563-bf4a-5e2cc3f42419 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":11}],"source":["df.describe()"]},{"cell_type":"code","execution_count":12,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":181},"executionInfo":{"elapsed":12,"status":"ok","timestamp":1718869204574,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"yOGr-3F4BhvR","outputId":"7b646af0-ccb6-4b2f-8a44-4d641be5a408"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["         ID  Year_Birth Education Marital_Status   Income  Kidhome  Teenhome  \\\n","513   11004        1893  2n Cycle         Single  60182.0        0         1   \n","827    1150        1899       PhD       Together  83532.0        0         0   \n","2233   7829        1900  2n Cycle       Divorced  36640.0        1         0   \n","\n","     Dt_Customer  Recency  MntWines  MntFruits  MntMeatProducts  \\\n","513   2014-05-17       23         8          0                5   \n","827   2013-09-26       36       755        144              562   \n","2233  2013-09-26       99        15          6                8   \n","\n","      MntFishProducts  MntSweetProducts  MntGoldProds  NumDealsPurchases  \\\n","513                 7                 0             2                  1   \n","827               104                64           224                  1   \n","2233                7                 4            25                  1   \n","\n","      NumWebPurchases  NumCatalogPurchases  NumStorePurchases  \\\n","513                 1                    0                  2   \n","827                 4                    6                  4   \n","2233                2                    1                  2   \n","\n","      NumWebVisitsMonth  AcceptedCmp3  AcceptedCmp4  AcceptedCmp5  \\\n","513                   4             0             0             0   \n","827                   1             0             0             1   \n","2233                  5             0             0             0   \n","\n","      AcceptedCmp1  AcceptedCmp2  Response  Complain       Country  \n","513              0             0         0         0  Saudi Arabia  \n","827              0             0         0         0         Spain  \n","2233             0             0         0         1         India  "],"text/html":["\n","  <div id=\"df-f2d19980-5902-4fb3-a54c-169988ef9e83\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Year_Birth</th>\n","      <th>Education</th>\n","      <th>Marital_Status</th>\n","      <th>Income</th>\n","      <th>Kidhome</th>\n","      <th>Teenhome</th>\n","      <th>Dt_Customer</th>\n","      <th>Recency</th>\n","      <th>MntWines</th>\n","      <th>MntFruits</th>\n","      <th>MntMeatProducts</th>\n","      <th>MntFishProducts</th>\n","      <th>MntSweetProducts</th>\n","      <th>MntGoldProds</th>\n","      <th>NumDealsPurchases</th>\n","      <th>NumWebPurchases</th>\n","      <th>NumCatalogPurchases</th>\n","      <th>NumStorePurchases</th>\n","      <th>NumWebVisitsMonth</th>\n","      <th>AcceptedCmp3</th>\n","      <th>AcceptedCmp4</th>\n","      <th>AcceptedCmp5</th>\n","      <th>AcceptedCmp1</th>\n","      <th>AcceptedCmp2</th>\n","      <th>Response</th>\n","      <th>Complain</th>\n","      <th>Country</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>513</th>\n","      <td>11004</td>\n","      <td>1893</td>\n","      <td>2n Cycle</td>\n","      <td>Single</td>\n","      <td>60182.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2014-05-17</td>\n","      <td>23</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Saudi Arabia</td>\n","    </tr>\n","    <tr>\n","      <th>827</th>\n","      <td>1150</td>\n","      <td>1899</td>\n","      <td>PhD</td>\n","      <td>Together</td>\n","      <td>83532.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2013-09-26</td>\n","      <td>36</td>\n","      <td>755</td>\n","      <td>144</td>\n","      <td>562</td>\n","      <td>104</td>\n","      <td>64</td>\n","      <td>224</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","    </tr>\n","    <tr>\n","      <th>2233</th>\n","      <td>7829</td>\n","      <td>1900</td>\n","      <td>2n Cycle</td>\n","      <td>Divorced</td>\n","      <td>36640.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2013-09-26</td>\n","      <td>99</td>\n","      <td>15</td>\n","      <td>6</td>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>4</td>\n","      <td>25</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>India</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f2d19980-5902-4fb3-a54c-169988ef9e83')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f2d19980-5902-4fb3-a54c-169988ef9e83 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f2d19980-5902-4fb3-a54c-169988ef9e83');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-24a528e6-f055-4433-aee1-cd589e5d4c67\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-24a528e6-f055-4433-aee1-cd589e5d4c67')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-24a528e6-f055-4433-aee1-cd589e5d4c67 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":12}],"source":["df[df['Year_Birth'] < 1940]"]},{"cell_type":"code","execution_count":13,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":181},"executionInfo":{"elapsed":12,"status":"ok","timestamp":1718869204575,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"koeGE1TPBpNB","outputId":"b5545d86-b461-499c-ce79-0e679e6e6205"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["       ID  Year_Birth   Education Marital_Status    Income  Kidhome  Teenhome  \\\n","497  1501        1982         PhD        Married  160803.0        0         0   \n","527  9432        1977  Graduation       Together  666666.0        1         0   \n","731  1503        1976         PhD       Together  162397.0        1         1   \n","\n","    Dt_Customer  Recency  MntWines  MntFruits  MntMeatProducts  \\\n","497  2012-08-04       21        55         16             1622   \n","527  2013-06-02       23         9         14               18   \n","731  2013-06-03       31        85          1               16   \n","\n","     MntFishProducts  MntSweetProducts  MntGoldProds  NumDealsPurchases  \\\n","497               17                 3             4                 15   \n","527                8                 1            12                  4   \n","731                2                 1             2                  0   \n","\n","     NumWebPurchases  NumCatalogPurchases  NumStorePurchases  \\\n","497                0                   28                  1   \n","527                3                    1                  3   \n","731                0                    0                  1   \n","\n","     NumWebVisitsMonth  AcceptedCmp3  AcceptedCmp4  AcceptedCmp5  \\\n","497                  0             0             0             0   \n","527                  6             0             0             0   \n","731                  1             0             0             0   \n","\n","     AcceptedCmp1  AcceptedCmp2  Response  Complain       Country  \n","497             0             0         0         0           USA  \n","527             0             0         0         0  Saudi Arabia  \n","731             0             0         0         0         Spain  "],"text/html":["\n","  <div id=\"df-35928523-dbe0-49ec-b3ef-cea9a84702ce\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Year_Birth</th>\n","      <th>Education</th>\n","      <th>Marital_Status</th>\n","      <th>Income</th>\n","      <th>Kidhome</th>\n","      <th>Teenhome</th>\n","      <th>Dt_Customer</th>\n","      <th>Recency</th>\n","      <th>MntWines</th>\n","      <th>MntFruits</th>\n","      <th>MntMeatProducts</th>\n","      <th>MntFishProducts</th>\n","      <th>MntSweetProducts</th>\n","      <th>MntGoldProds</th>\n","      <th>NumDealsPurchases</th>\n","      <th>NumWebPurchases</th>\n","      <th>NumCatalogPurchases</th>\n","      <th>NumStorePurchases</th>\n","      <th>NumWebVisitsMonth</th>\n","      <th>AcceptedCmp3</th>\n","      <th>AcceptedCmp4</th>\n","      <th>AcceptedCmp5</th>\n","      <th>AcceptedCmp1</th>\n","      <th>AcceptedCmp2</th>\n","      <th>Response</th>\n","      <th>Complain</th>\n","      <th>Country</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>497</th>\n","      <td>1501</td>\n","      <td>1982</td>\n","      <td>PhD</td>\n","      <td>Married</td>\n","      <td>160803.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2012-08-04</td>\n","      <td>21</td>\n","      <td>55</td>\n","      <td>16</td>\n","      <td>1622</td>\n","      <td>17</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>15</td>\n","      <td>0</td>\n","      <td>28</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>USA</td>\n","    </tr>\n","    <tr>\n","      <th>527</th>\n","      <td>9432</td>\n","      <td>1977</td>\n","      <td>Graduation</td>\n","      <td>Together</td>\n","      <td>666666.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2013-06-02</td>\n","      <td>23</td>\n","      <td>9</td>\n","      <td>14</td>\n","      <td>18</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>12</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Saudi Arabia</td>\n","    </tr>\n","    <tr>\n","      <th>731</th>\n","      <td>1503</td>\n","      <td>1976</td>\n","      <td>PhD</td>\n","      <td>Together</td>\n","      <td>162397.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2013-06-03</td>\n","      <td>31</td>\n","      <td>85</td>\n","      <td>1</td>\n","      <td>16</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-35928523-dbe0-49ec-b3ef-cea9a84702ce')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-35928523-dbe0-49ec-b3ef-cea9a84702ce button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-35928523-dbe0-49ec-b3ef-cea9a84702ce');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-363184ee-bf72-4625-b099-94e2931ab579\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-363184ee-bf72-4625-b099-94e2931ab579')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-363184ee-bf72-4625-b099-94e2931ab579 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":13}],"source":["\n","df[df['Income'] > 160000]                 #second highest income"]},{"cell_type":"markdown","metadata":{"id":"y_a5J_Ma-fkU"},"source":["### `Year_Birth and Income` are possible outliers.\n"]},{"cell_type":"markdown","metadata":{"id":"aW0IacrjAqma"},"source":["## **Assumptions**"]},{"cell_type":"markdown","metadata":{"id":"rqSM4YfgA2vK"},"source":["1. Year_Birth - For Year_Birth, the minnimum is 1893, no one can technically live for so much of time, if we compare it to the Dt_Customer.\n","\n","2. Income - For Income, the maximum is 6,66,666 and minimum is 1730. The second highest income is around 160,000 so Income is a possible outlier."]},{"cell_type":"markdown","metadata":{"id":"OIN-dd83EgwF"},"source":["### `Plotting data on a boxplot`"]},{"cell_type":"code","execution_count":14,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":611},"executionInfo":{"elapsed":1768,"status":"ok","timestamp":1718869206332,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"ug6O7VK3-dfM","outputId":"bb721a97-30a8-4edb-8a52-3b472b60da03"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x300 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x300 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["a = ['Year_Birth','Income']\n","for i in a :\n","  figure = plt.figure(figsize = (10,3))\n","  sns.boxplot(df[i], orient = 'h')\n","  plt.title(i)\n","  plt.xlabel('')\n","  plt.show\n","\n"]},{"cell_type":"markdown","metadata":{"id":"lEAdbVirG09k"},"source":["### Finding q1,q3,IQR and min for `Year_Birth`"]},{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":16,"status":"ok","timestamp":1718869206333,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"vFW5bfah-db0","outputId":"7db0f076-f982-46ed-bc61-7030085c8cb4"},"outputs":[{"output_type":"stream","name":"stdout","text":["Q1 =  1959.0 \n","Q3 =  1977.0 \n","IQR =  18.0 \n","Minimum =  1932.0\n"]}],"source":["q1 = df['Year_Birth'].quantile(0.25)\n","q3 = df['Year_Birth'].quantile(0.75)\n","\n","IQR = q3 - q1\n","min_ = q1 - 1.5*IQR\n","\n","print(f\"Q1 = \",q1,\"\\n\"\n","      \"Q3 = \",q3,\"\\n\"\n","      \"IQR = \",IQR,\"\\n\"\n","      \"Minimum = \",min_)"]},{"cell_type":"markdown","metadata":{"id":"T6AYO-bhI3xs"},"source":["## 1.  Are there any null values or outliers? How will you handle them?\n"]},{"cell_type":"markdown","metadata":{"id":"VDZNs30OITR6"},"source":["### Handling outliers for `Year_Birth` by capping."]},{"cell_type":"code","execution_count":16,"metadata":{"id":"smJyACJTH_mi","executionInfo":{"status":"ok","timestamp":1718869206336,"user_tz":-330,"elapsed":17,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}}},"outputs":[],"source":["out_index = df[df['Year_Birth'] < 1940].index                          #fetching index for outlying rows."]},{"cell_type":"code","execution_count":17,"metadata":{"id":"wvdTLbcFJqEm","executionInfo":{"status":"ok","timestamp":1718869206337,"user_tz":-330,"elapsed":18,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}}},"outputs":[],"source":["df.loc[out_index,'Year_Birth'] = min_"]},{"cell_type":"code","execution_count":18,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":181},"executionInfo":{"elapsed":18,"status":"ok","timestamp":1718869206338,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"VqQ0ZCIRJrGu","outputId":"ab93dabe-55cd-4f80-d7a9-e9eb21548b35"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["         ID  Year_Birth Education Marital_Status   Income  Kidhome  Teenhome  \\\n","513   11004        1932  2n Cycle         Single  60182.0        0         1   \n","827    1150        1932       PhD       Together  83532.0        0         0   \n","2233   7829        1932  2n Cycle       Divorced  36640.0        1         0   \n","\n","     Dt_Customer  Recency  MntWines  MntFruits  MntMeatProducts  \\\n","513   2014-05-17       23         8          0                5   \n","827   2013-09-26       36       755        144              562   \n","2233  2013-09-26       99        15          6                8   \n","\n","      MntFishProducts  MntSweetProducts  MntGoldProds  NumDealsPurchases  \\\n","513                 7                 0             2                  1   \n","827               104                64           224                  1   \n","2233                7                 4            25                  1   \n","\n","      NumWebPurchases  NumCatalogPurchases  NumStorePurchases  \\\n","513                 1                    0                  2   \n","827                 4                    6                  4   \n","2233                2                    1                  2   \n","\n","      NumWebVisitsMonth  AcceptedCmp3  AcceptedCmp4  AcceptedCmp5  \\\n","513                   4             0             0             0   \n","827                   1             0             0             1   \n","2233                  5             0             0             0   \n","\n","      AcceptedCmp1  AcceptedCmp2  Response  Complain       Country  \n","513              0             0         0         0  Saudi Arabia  \n","827              0             0         0         0         Spain  \n","2233             0             0         0         1         India  "],"text/html":["\n","  <div id=\"df-aa366457-f6ea-4671-b943-ee250bdfcd58\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Year_Birth</th>\n","      <th>Education</th>\n","      <th>Marital_Status</th>\n","      <th>Income</th>\n","      <th>Kidhome</th>\n","      <th>Teenhome</th>\n","      <th>Dt_Customer</th>\n","      <th>Recency</th>\n","      <th>MntWines</th>\n","      <th>MntFruits</th>\n","      <th>MntMeatProducts</th>\n","      <th>MntFishProducts</th>\n","      <th>MntSweetProducts</th>\n","      <th>MntGoldProds</th>\n","      <th>NumDealsPurchases</th>\n","      <th>NumWebPurchases</th>\n","      <th>NumCatalogPurchases</th>\n","      <th>NumStorePurchases</th>\n","      <th>NumWebVisitsMonth</th>\n","      <th>AcceptedCmp3</th>\n","      <th>AcceptedCmp4</th>\n","      <th>AcceptedCmp5</th>\n","      <th>AcceptedCmp1</th>\n","      <th>AcceptedCmp2</th>\n","      <th>Response</th>\n","      <th>Complain</th>\n","      <th>Country</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>513</th>\n","      <td>11004</td>\n","      <td>1932</td>\n","      <td>2n Cycle</td>\n","      <td>Single</td>\n","      <td>60182.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2014-05-17</td>\n","      <td>23</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Saudi Arabia</td>\n","    </tr>\n","    <tr>\n","      <th>827</th>\n","      <td>1150</td>\n","      <td>1932</td>\n","      <td>PhD</td>\n","      <td>Together</td>\n","      <td>83532.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2013-09-26</td>\n","      <td>36</td>\n","      <td>755</td>\n","      <td>144</td>\n","      <td>562</td>\n","      <td>104</td>\n","      <td>64</td>\n","      <td>224</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","    </tr>\n","    <tr>\n","      <th>2233</th>\n","      <td>7829</td>\n","      <td>1932</td>\n","      <td>2n Cycle</td>\n","      <td>Divorced</td>\n","      <td>36640.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2013-09-26</td>\n","      <td>99</td>\n","      <td>15</td>\n","      <td>6</td>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>4</td>\n","      <td>25</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>India</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aa366457-f6ea-4671-b943-ee250bdfcd58')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-aa366457-f6ea-4671-b943-ee250bdfcd58 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-aa366457-f6ea-4671-b943-ee250bdfcd58');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9475de1d-3433-4b6f-ae31-dba905e4f274\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9475de1d-3433-4b6f-ae31-dba905e4f274')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9475de1d-3433-4b6f-ae31-dba905e4f274 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":18}],"source":["df.iloc[out_index]                                                   #the possible outlier has been treated."]},{"cell_type":"markdown","metadata":{"id":"WtDQ8YbcKeAY"},"source":["### Handling outliers for `Income` by capping."]},{"cell_type":"markdown","metadata":{"id":"vOrdEDcALyDS"},"source":["**Handling the max value**"]},{"cell_type":"code","execution_count":19,"metadata":{"id":"yXoGJtTNJrDe","executionInfo":{"status":"ok","timestamp":1718869206338,"user_tz":-330,"elapsed":17,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}}},"outputs":[],"source":["out_index = df[df['Income'] > 200000].index                  #200000 because there is only one max value and that is 666666 and storing it's index.\n"]},{"cell_type":"code","execution_count":20,"metadata":{"id":"52fMpVSgJrA2","executionInfo":{"status":"ok","timestamp":1718869206338,"user_tz":-330,"elapsed":17,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}}},"outputs":[],"source":["df.loc[out_index,'Income'] = 160000                         #160000 because it is the second highest income."]},{"cell_type":"markdown","metadata":{"id":"qCABydyiL3NT"},"source":["**Handling the min value**"]},{"cell_type":"code","execution_count":21,"metadata":{"id":"1jiviO-jJq-G","executionInfo":{"status":"ok","timestamp":1718869206338,"user_tz":-330,"elapsed":17,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}}},"outputs":[],"source":["out_index = df[df['Income'] < 3000].index"]},{"cell_type":"code","execution_count":22,"metadata":{"id":"Sv59etHLMS9N","executionInfo":{"status":"ok","timestamp":1718869206339,"user_tz":-330,"elapsed":17,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}}},"outputs":[],"source":["df.loc[out_index,'Income'] = 3000"]},{"cell_type":"code","execution_count":23,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":132},"executionInfo":{"elapsed":17,"status":"ok","timestamp":1718869206339,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"WwKIjTMGMYoh","outputId":"0c287ad5-988f-449e-8001-fecf6d1cb6c9"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["        ID  Year_Birth   Education Marital_Status  Income  Kidhome  Teenhome  \\\n","961   5376        1979  Graduation        Married  3000.0        1         0   \n","1466  6862        1971  Graduation       Divorced  3000.0        0         0   \n","\n","     Dt_Customer  Recency  MntWines  MntFruits  MntMeatProducts  \\\n","961   2013-01-06       42         1          1             1725   \n","1466  2014-05-18       65         1          1                3   \n","\n","      MntFishProducts  MntSweetProducts  MntGoldProds  NumDealsPurchases  \\\n","961                 1                 1             1                 15   \n","1466                1                 1             1                 15   \n","\n","      NumWebPurchases  NumCatalogPurchases  NumStorePurchases  \\\n","961                 0                   28                  0   \n","1466                0                    0                  0   \n","\n","      NumWebVisitsMonth  AcceptedCmp3  AcceptedCmp4  AcceptedCmp5  \\\n","961                   1             0             0             0   \n","1466                 20             0             0             0   \n","\n","      AcceptedCmp1  AcceptedCmp2  Response  Complain Country  \n","961              0             0         0         0     USA  \n","1466             0             0         0         0   Spain  "],"text/html":["\n","  <div id=\"df-ddaaf7f8-37a1-4b11-b7a2-4218549a55a2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Year_Birth</th>\n","      <th>Education</th>\n","      <th>Marital_Status</th>\n","      <th>Income</th>\n","      <th>Kidhome</th>\n","      <th>Teenhome</th>\n","      <th>Dt_Customer</th>\n","      <th>Recency</th>\n","      <th>MntWines</th>\n","      <th>MntFruits</th>\n","      <th>MntMeatProducts</th>\n","      <th>MntFishProducts</th>\n","      <th>MntSweetProducts</th>\n","      <th>MntGoldProds</th>\n","      <th>NumDealsPurchases</th>\n","      <th>NumWebPurchases</th>\n","      <th>NumCatalogPurchases</th>\n","      <th>NumStorePurchases</th>\n","      <th>NumWebVisitsMonth</th>\n","      <th>AcceptedCmp3</th>\n","      <th>AcceptedCmp4</th>\n","      <th>AcceptedCmp5</th>\n","      <th>AcceptedCmp1</th>\n","      <th>AcceptedCmp2</th>\n","      <th>Response</th>\n","      <th>Complain</th>\n","      <th>Country</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>961</th>\n","      <td>5376</td>\n","      <td>1979</td>\n","      <td>Graduation</td>\n","      <td>Married</td>\n","      <td>3000.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2013-01-06</td>\n","      <td>42</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1725</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>15</td>\n","      <td>0</td>\n","      <td>28</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>USA</td>\n","    </tr>\n","    <tr>\n","      <th>1466</th>\n","      <td>6862</td>\n","      <td>1971</td>\n","      <td>Graduation</td>\n","      <td>Divorced</td>\n","      <td>3000.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2014-05-18</td>\n","      <td>65</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>15</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ddaaf7f8-37a1-4b11-b7a2-4218549a55a2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ddaaf7f8-37a1-4b11-b7a2-4218549a55a2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ddaaf7f8-37a1-4b11-b7a2-4218549a55a2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c8a5bec9-bde1-484c-a580-91b3a24fe71f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c8a5bec9-bde1-484c-a580-91b3a24fe71f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c8a5bec9-bde1-484c-a580-91b3a24fe71f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":23}],"source":["df.iloc[out_index]"]},{"cell_type":"code","execution_count":71,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":611},"executionInfo":{"elapsed":1235,"status":"ok","timestamp":1718869414550,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"qjQEJHIxMbZx","outputId":"9a612178-d2ba-4339-a138-36701982b8b0"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x300 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x300 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["a = ['Year_Birth','Income']\n","for i in a :\n","  figure = plt.figure(figsize = (10,3))\n","  sns.boxplot(df[i], orient = 'h')\n","  plt.title(i)\n","  plt.xlabel('')\n","  plt.show"]},{"cell_type":"code","execution_count":25,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"elapsed":10,"status":"ok","timestamp":1718869208385,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"BpI5aBDAMjqR","outputId":"422cc0b5-df2a-4513-89a0-0480c4ed1b6c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 ID   Year_Birth         Income      Kidhome     Teenhome  \\\n","count   2240.000000  2240.000000    2216.000000  2240.000000  2240.000000   \n","mean    5592.159821  1968.852232   52019.434116     0.444196     0.506250   \n","min        0.000000  1932.000000    3000.000000     0.000000     0.000000   \n","25%     2828.250000  1959.000000   35303.000000     0.000000     0.000000   \n","50%     5458.500000  1970.000000   51381.500000     0.000000     0.000000   \n","75%     8427.750000  1977.000000   68522.000000     1.000000     1.000000   \n","max    11191.000000  1996.000000  162397.000000     2.000000     2.000000   \n","std     3246.662198    11.771725   21641.584435     0.538398     0.544538   \n","\n","                         Dt_Customer      Recency     MntWines    MntFruits  \\\n","count                           2240  2240.000000  2240.000000  2240.000000   \n","mean   2013-07-10 10:01:42.857142784    49.109375   303.935714    26.302232   \n","min              2012-07-30 00:00:00     0.000000     0.000000     0.000000   \n","25%              2013-01-16 00:00:00    24.000000    23.750000     1.000000   \n","50%              2013-07-08 12:00:00    49.000000   173.500000     8.000000   \n","75%              2013-12-30 06:00:00    74.000000   504.250000    33.000000   \n","max              2014-06-29 00:00:00    99.000000  1493.000000   199.000000   \n","std                              NaN    28.962453   336.597393    39.773434   \n","\n","       MntMeatProducts  MntFishProducts  MntSweetProducts  MntGoldProds  \\\n","count      2240.000000      2240.000000       2240.000000   2240.000000   \n","mean        166.950000        37.525446         27.062946     44.021875   \n","min           0.000000         0.000000          0.000000      0.000000   \n","25%          16.000000         3.000000          1.000000      9.000000   \n","50%          67.000000        12.000000          8.000000     24.000000   \n","75%         232.000000        50.000000         33.000000     56.000000   \n","max        1725.000000       259.000000        263.000000    362.000000   \n","std         225.715373        54.628979         41.280498     52.167439   \n","\n","       NumDealsPurchases  NumWebPurchases  NumCatalogPurchases  \\\n","count        2240.000000      2240.000000          2240.000000   \n","mean            2.325000         4.084821             2.662054   \n","min             0.000000         0.000000             0.000000   \n","25%             1.000000         2.000000             0.000000   \n","50%             2.000000         4.000000             2.000000   \n","75%             3.000000         6.000000             4.000000   \n","max            15.000000        27.000000            28.000000   \n","std             1.932238         2.778714             2.923101   \n","\n","       NumStorePurchases  NumWebVisitsMonth  AcceptedCmp3  AcceptedCmp4  \\\n","count        2240.000000        2240.000000   2240.000000   2240.000000   \n","mean            5.790179           5.316518      0.072768      0.074554   \n","min             0.000000           0.000000      0.000000      0.000000   \n","25%             3.000000           3.000000      0.000000      0.000000   \n","50%             5.000000           6.000000      0.000000      0.000000   \n","75%             8.000000           7.000000      0.000000      0.000000   \n","max            13.000000          20.000000      1.000000      1.000000   \n","std             3.250958           2.426645      0.259813      0.262728   \n","\n","       AcceptedCmp5  AcceptedCmp1  AcceptedCmp2     Response     Complain  \n","count   2240.000000   2240.000000   2240.000000  2240.000000  2240.000000  \n","mean       0.072768      0.064286      0.013393     0.149107     0.009375  \n","min        0.000000      0.000000      0.000000     0.000000     0.000000  \n","25%        0.000000      0.000000      0.000000     0.000000     0.000000  \n","50%        0.000000      0.000000      0.000000     0.000000     0.000000  \n","75%        0.000000      0.000000      0.000000     0.000000     0.000000  \n","max        1.000000      1.000000      1.000000     1.000000     1.000000  \n","std        0.259813      0.245316      0.114976     0.356274     0.096391  "],"text/html":["\n","  <div id=\"df-39247d45-792e-46c9-91a0-088bcc627e58\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Year_Birth</th>\n","      <th>Income</th>\n","      <th>Kidhome</th>\n","      <th>Teenhome</th>\n","      <th>Dt_Customer</th>\n","      <th>Recency</th>\n","      <th>MntWines</th>\n","      <th>MntFruits</th>\n","      <th>MntMeatProducts</th>\n","      <th>MntFishProducts</th>\n","      <th>MntSweetProducts</th>\n","      <th>MntGoldProds</th>\n","      <th>NumDealsPurchases</th>\n","      <th>NumWebPurchases</th>\n","      <th>NumCatalogPurchases</th>\n","      <th>NumStorePurchases</th>\n","      <th>NumWebVisitsMonth</th>\n","      <th>AcceptedCmp3</th>\n","      <th>AcceptedCmp4</th>\n","      <th>AcceptedCmp5</th>\n","      <th>AcceptedCmp1</th>\n","      <th>AcceptedCmp2</th>\n","      <th>Response</th>\n","      <th>Complain</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2216.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>5592.159821</td>\n","      <td>1968.852232</td>\n","      <td>52019.434116</td>\n","      <td>0.444196</td>\n","      <td>0.506250</td>\n","      <td>2013-07-10 10:01:42.857142784</td>\n","      <td>49.109375</td>\n","      <td>303.935714</td>\n","      <td>26.302232</td>\n","      <td>166.950000</td>\n","      <td>37.525446</td>\n","      <td>27.062946</td>\n","      <td>44.021875</td>\n","      <td>2.325000</td>\n","      <td>4.084821</td>\n","      <td>2.662054</td>\n","      <td>5.790179</td>\n","      <td>5.316518</td>\n","      <td>0.072768</td>\n","      <td>0.074554</td>\n","      <td>0.072768</td>\n","      <td>0.064286</td>\n","      <td>0.013393</td>\n","      <td>0.149107</td>\n","      <td>0.009375</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>1932.000000</td>\n","      <td>3000.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2012-07-30 00:00:00</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2828.250000</td>\n","      <td>1959.000000</td>\n","      <td>35303.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2013-01-16 00:00:00</td>\n","      <td>24.000000</td>\n","      <td>23.750000</td>\n","      <td>1.000000</td>\n","      <td>16.000000</td>\n","      <td>3.000000</td>\n","      <td>1.000000</td>\n","      <td>9.000000</td>\n","      <td>1.000000</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>3.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>5458.500000</td>\n","      <td>1970.000000</td>\n","      <td>51381.500000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2013-07-08 12:00:00</td>\n","      <td>49.000000</td>\n","      <td>173.500000</td>\n","      <td>8.000000</td>\n","      <td>67.000000</td>\n","      <td>12.000000</td>\n","      <td>8.000000</td>\n","      <td>24.000000</td>\n","      <td>2.000000</td>\n","      <td>4.000000</td>\n","      <td>2.000000</td>\n","      <td>5.000000</td>\n","      <td>6.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>8427.750000</td>\n","      <td>1977.000000</td>\n","      <td>68522.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>2013-12-30 06:00:00</td>\n","      <td>74.000000</td>\n","      <td>504.250000</td>\n","      <td>33.000000</td>\n","      <td>232.000000</td>\n","      <td>50.000000</td>\n","      <td>33.000000</td>\n","      <td>56.000000</td>\n","      <td>3.000000</td>\n","      <td>6.000000</td>\n","      <td>4.000000</td>\n","      <td>8.000000</td>\n","      <td>7.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>11191.000000</td>\n","      <td>1996.000000</td>\n","      <td>162397.000000</td>\n","      <td>2.000000</td>\n","      <td>2.000000</td>\n","      <td>2014-06-29 00:00:00</td>\n","      <td>99.000000</td>\n","      <td>1493.000000</td>\n","      <td>199.000000</td>\n","      <td>1725.000000</td>\n","      <td>259.000000</td>\n","      <td>263.000000</td>\n","      <td>362.000000</td>\n","      <td>15.000000</td>\n","      <td>27.000000</td>\n","      <td>28.000000</td>\n","      <td>13.000000</td>\n","      <td>20.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>3246.662198</td>\n","      <td>11.771725</td>\n","      <td>21641.584435</td>\n","      <td>0.538398</td>\n","      <td>0.544538</td>\n","      <td>NaN</td>\n","      <td>28.962453</td>\n","      <td>336.597393</td>\n","      <td>39.773434</td>\n","      <td>225.715373</td>\n","      <td>54.628979</td>\n","      <td>41.280498</td>\n","      <td>52.167439</td>\n","      <td>1.932238</td>\n","      <td>2.778714</td>\n","      <td>2.923101</td>\n","      <td>3.250958</td>\n","      <td>2.426645</td>\n","      <td>0.259813</td>\n","      <td>0.262728</td>\n","      <td>0.259813</td>\n","      <td>0.245316</td>\n","      <td>0.114976</td>\n","      <td>0.356274</td>\n","      <td>0.096391</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-39247d45-792e-46c9-91a0-088bcc627e58')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-39247d45-792e-46c9-91a0-088bcc627e58 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-39247d45-792e-46c9-91a0-088bcc627e58');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-abe26e25-fe16-44e7-a6d7-a027e1942ed7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-abe26e25-fe16-44e7-a6d7-a027e1942ed7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-abe26e25-fe16-44e7-a6d7-a027e1942ed7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":25}],"source":["df.describe()                                                          # all possible outliers has been treated."]},{"cell_type":"markdown","metadata":{"id":"tNnxuTYzJBGj"},"source":["### `Null Values`"]},{"cell_type":"code","execution_count":26,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1718869208385,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"AyqDnoCLMosB","outputId":"b77891cf-0a71-4cb5-eeb6-80fbec022891"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["ID                      0\n","Year_Birth              0\n","Education               0\n","Marital_Status          0\n","Income                 24\n","Kidhome                 0\n","Teenhome                0\n","Dt_Customer             0\n","Recency                 0\n","MntWines                0\n","MntFruits               0\n","MntMeatProducts         0\n","MntFishProducts         0\n","MntSweetProducts        0\n","MntGoldProds            0\n","NumDealsPurchases       0\n","NumWebPurchases         0\n","NumCatalogPurchases     0\n","NumStorePurchases       0\n","NumWebVisitsMonth       0\n","AcceptedCmp3            0\n","AcceptedCmp4            0\n","AcceptedCmp5            0\n","AcceptedCmp1            0\n","AcceptedCmp2            0\n","Response                0\n","Complain                0\n","Country                 0\n","dtype: int64"]},"metadata":{},"execution_count":26}],"source":["df.isnull().sum()                                                    #income has 24 null values."]},{"cell_type":"code","execution_count":27,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"executionInfo":{"elapsed":761,"status":"ok","timestamp":1718869210596,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"mBzi4DU-JNVD","outputId":"c75ffa9b-d49b-43a8-affa-a200327c452a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Income', ylabel='Count'>"]},"metadata":{},"execution_count":27},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["sns.histplot(df['Income'], kde = True)                                                  #there is a visible bump on 160,000 as we capped the outlier earlier"]},{"cell_type":"code","execution_count":28,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1718869210597,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"RZ9qzk9dJdjS","outputId":"ffb64d95-3dd7-454d-f537-6b1a89166dc7"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["52019.434115523465"]},"metadata":{},"execution_count":28}],"source":["df['Income'].mean()"]},{"cell_type":"code","execution_count":29,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1718869210597,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"3Y5LDi_-K3SB","outputId":"cf1d3c3e-b00f-431d-d31e-e207471a7c19"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["51381.5"]},"metadata":{},"execution_count":29}],"source":["df['Income'].median()                               #if the outliers are not treated use median. But in this case mean has been used."]},{"cell_type":"code","execution_count":30,"metadata":{"id":"3BB3-llbK53A","executionInfo":{"status":"ok","timestamp":1718869212047,"user_tz":-330,"elapsed":1454,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}}},"outputs":[],"source":["df['Income'].fillna(df['Income'].mean(), inplace = True)                           #to fill null values fillna has been used."]},{"cell_type":"code","execution_count":77,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":461,"status":"ok","timestamp":1718871720847,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"UZvos8wfLSVB","outputId":"ef083494-e6f7-4565-deb5-3b149c36318b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["ID                      0\n","Year_Birth              0\n","Education               0\n","Marital_Status          0\n","Income                  0\n","Dt_Customer             0\n","Recency                 0\n","MntWines                0\n","MntFruits               0\n","MntMeatProducts         0\n","MntFishProducts         0\n","MntSweetProducts        0\n","MntGoldProds            0\n","NumDealsPurchases       0\n","NumWebPurchases         0\n","NumCatalogPurchases     0\n","NumStorePurchases       0\n","NumWebVisitsMonth       0\n","AcceptedCmp3            0\n","AcceptedCmp4            0\n","AcceptedCmp5            0\n","AcceptedCmp1            0\n","AcceptedCmp2            0\n","Response                0\n","Complain                0\n","Country                 0\n","Age                    49\n","childhome               0\n","dtype: int64"]},"metadata":{},"execution_count":77}],"source":["df.isnull().sum()                                                                  #the null values in Income has been filled."]},{"cell_type":"markdown","metadata":{"id":"rHMO3QD1MynA"},"source":["## 2. What factors are significantly related to the number of web purchases?"]},{"cell_type":"code","execution_count":32,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"executionInfo":{"elapsed":35,"status":"ok","timestamp":1718869212048,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"oDGxq7EgLdKy","outputId":"a4783877-cdea-40e3-acd7-68c54dd38c1b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      ID  Year_Birth   Education Marital_Status   Income  Kidhome  Teenhome  \\\n","0   1826        1970  Graduation       Divorced  84835.0        0         0   \n","1      1        1961  Graduation         Single  57091.0        0         0   \n","2  10476        1958  Graduation        Married  67267.0        0         1   \n","3   1386        1967  Graduation       Together  32474.0        1         1   \n","4   5371        1989  Graduation         Single  21474.0        1         0   \n","\n","  Dt_Customer  Recency  MntWines  MntFruits  MntMeatProducts  MntFishProducts  \\\n","0  2014-06-16        0       189        104              379              111   \n","1  2014-06-15        0       464          5               64                7   \n","2  2014-05-13        0       134         11               59               15   \n","3  2014-05-11        0        10          0                1                0   \n","4  2014-04-08        0         6         16               24               11   \n","\n","   MntSweetProducts  MntGoldProds  NumDealsPurchases  NumWebPurchases  \\\n","0               189           218                  1                4   \n","1                 0            37                  1                7   \n","2                 2            30                  1                3   \n","3                 0             0                  1                1   \n","4                 0            34                  2                3   \n","\n","   NumCatalogPurchases  NumStorePurchases  NumWebVisitsMonth  AcceptedCmp3  \\\n","0                    4                  6                  1             0   \n","1                    3                  7                  5             0   \n","2                    2                  5                  2             0   \n","3                    0                  2                  7             0   \n","4                    1                  2                  7             1   \n","\n","   AcceptedCmp4  AcceptedCmp5  AcceptedCmp1  AcceptedCmp2  Response  Complain  \\\n","0             0             0             0             0         1         0   \n","1             0             0             0             1         1         0   \n","2             0             0             0             0         0         0   \n","3             0             0             0             0         0         0   \n","4             0             0             0             0         1         0   \n","\n","     Country  \n","0      Spain  \n","1     Canada  \n","2        USA  \n","3  Australia  \n","4      Spain  "],"text/html":["\n","  <div id=\"df-53d4adc1-3c77-46c0-b2eb-5bb91185d347\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Year_Birth</th>\n","      <th>Education</th>\n","      <th>Marital_Status</th>\n","      <th>Income</th>\n","      <th>Kidhome</th>\n","      <th>Teenhome</th>\n","      <th>Dt_Customer</th>\n","      <th>Recency</th>\n","      <th>MntWines</th>\n","      <th>MntFruits</th>\n","      <th>MntMeatProducts</th>\n","      <th>MntFishProducts</th>\n","      <th>MntSweetProducts</th>\n","      <th>MntGoldProds</th>\n","      <th>NumDealsPurchases</th>\n","      <th>NumWebPurchases</th>\n","      <th>NumCatalogPurchases</th>\n","      <th>NumStorePurchases</th>\n","      <th>NumWebVisitsMonth</th>\n","      <th>AcceptedCmp3</th>\n","      <th>AcceptedCmp4</th>\n","      <th>AcceptedCmp5</th>\n","      <th>AcceptedCmp1</th>\n","      <th>AcceptedCmp2</th>\n","      <th>Response</th>\n","      <th>Complain</th>\n","      <th>Country</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1826</td>\n","      <td>1970</td>\n","      <td>Graduation</td>\n","      <td>Divorced</td>\n","      <td>84835.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2014-06-16</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>104</td>\n","      <td>379</td>\n","      <td>111</td>\n","      <td>189</td>\n","      <td>218</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1961</td>\n","      <td>Graduation</td>\n","      <td>Single</td>\n","      <td>57091.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2014-06-15</td>\n","      <td>0</td>\n","      <td>464</td>\n","      <td>5</td>\n","      <td>64</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>37</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Canada</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10476</td>\n","      <td>1958</td>\n","      <td>Graduation</td>\n","      <td>Married</td>\n","      <td>67267.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2014-05-13</td>\n","      <td>0</td>\n","      <td>134</td>\n","      <td>11</td>\n","      <td>59</td>\n","      <td>15</td>\n","      <td>2</td>\n","      <td>30</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>USA</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1386</td>\n","      <td>1967</td>\n","      <td>Graduation</td>\n","      <td>Together</td>\n","      <td>32474.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2014-05-11</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Australia</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5371</td>\n","      <td>1989</td>\n","      <td>Graduation</td>\n","      <td>Single</td>\n","      <td>21474.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2014-04-08</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>16</td>\n","      <td>24</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>34</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-53d4adc1-3c77-46c0-b2eb-5bb91185d347')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-53d4adc1-3c77-46c0-b2eb-5bb91185d347 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-53d4adc1-3c77-46c0-b2eb-5bb91185d347');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f6e75e8a-c653-4a6f-b83c-d5b611c6ed73\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f6e75e8a-c653-4a6f-b83c-d5b611c6ed73')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f6e75e8a-c653-4a6f-b83c-d5b611c6ed73 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":32}],"source":["df.head()"]},{"cell_type":"code","execution_count":33,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"executionInfo":{"elapsed":35,"status":"ok","timestamp":1718869212049,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"OWy6q_A6M8H9","outputId":"03988479-5cfd-466a-de99-ff59b1ec667f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      ID  Year_Birth   Education Marital_Status   Income  Kidhome  Teenhome  \\\n","0   1826        1970  Graduation       Divorced  84835.0        0         0   \n","1      1        1961  Graduation         Single  57091.0        0         0   \n","2  10476        1958  Graduation        Married  67267.0        0         1   \n","3   1386        1967  Graduation       Together  32474.0        1         1   \n","4   5371        1989  Graduation         Single  21474.0        1         0   \n","\n","  Dt_Customer  Recency  MntWines  MntFruits  MntMeatProducts  MntFishProducts  \\\n","0  2014-06-16        0       189        104              379              111   \n","1  2014-06-15        0       464          5               64                7   \n","2  2014-05-13        0       134         11               59               15   \n","3  2014-05-11        0        10          0                1                0   \n","4  2014-04-08        0         6         16               24               11   \n","\n","   MntSweetProducts  MntGoldProds  NumDealsPurchases  NumWebPurchases  \\\n","0               189           218                  1                4   \n","1                 0            37                  1                7   \n","2                 2            30                  1                3   \n","3                 0             0                  1                1   \n","4                 0            34                  2                3   \n","\n","   NumCatalogPurchases  NumStorePurchases  NumWebVisitsMonth  AcceptedCmp3  \\\n","0                    4                  6                  1             0   \n","1                    3                  7                  5             0   \n","2                    2                  5                  2             0   \n","3                    0                  2                  7             0   \n","4                    1                  2                  7             1   \n","\n","   AcceptedCmp4  AcceptedCmp5  AcceptedCmp1  AcceptedCmp2  Response  Complain  \\\n","0             0             0             0             0         1         0   \n","1             0             0             0             1         1         0   \n","2             0             0             0             0         0         0   \n","3             0             0             0             0         0         0   \n","4             0             0             0             0         1         0   \n","\n","     Country  \n","0      Spain  \n","1     Canada  \n","2        USA  \n","3  Australia  \n","4      Spain  "],"text/html":["\n","  <div id=\"df-3eee5c3e-41c4-43e1-b468-6a73a5faa792\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Year_Birth</th>\n","      <th>Education</th>\n","      <th>Marital_Status</th>\n","      <th>Income</th>\n","      <th>Kidhome</th>\n","      <th>Teenhome</th>\n","      <th>Dt_Customer</th>\n","      <th>Recency</th>\n","      <th>MntWines</th>\n","      <th>MntFruits</th>\n","      <th>MntMeatProducts</th>\n","      <th>MntFishProducts</th>\n","      <th>MntSweetProducts</th>\n","      <th>MntGoldProds</th>\n","      <th>NumDealsPurchases</th>\n","      <th>NumWebPurchases</th>\n","      <th>NumCatalogPurchases</th>\n","      <th>NumStorePurchases</th>\n","      <th>NumWebVisitsMonth</th>\n","      <th>AcceptedCmp3</th>\n","      <th>AcceptedCmp4</th>\n","      <th>AcceptedCmp5</th>\n","      <th>AcceptedCmp1</th>\n","      <th>AcceptedCmp2</th>\n","      <th>Response</th>\n","      <th>Complain</th>\n","      <th>Country</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1826</td>\n","      <td>1970</td>\n","      <td>Graduation</td>\n","      <td>Divorced</td>\n","      <td>84835.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2014-06-16</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>104</td>\n","      <td>379</td>\n","      <td>111</td>\n","      <td>189</td>\n","      <td>218</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1961</td>\n","      <td>Graduation</td>\n","      <td>Single</td>\n","      <td>57091.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2014-06-15</td>\n","      <td>0</td>\n","      <td>464</td>\n","      <td>5</td>\n","      <td>64</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>37</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Canada</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10476</td>\n","      <td>1958</td>\n","      <td>Graduation</td>\n","      <td>Married</td>\n","      <td>67267.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2014-05-13</td>\n","      <td>0</td>\n","      <td>134</td>\n","      <td>11</td>\n","      <td>59</td>\n","      <td>15</td>\n","      <td>2</td>\n","      <td>30</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>USA</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1386</td>\n","      <td>1967</td>\n","      <td>Graduation</td>\n","      <td>Together</td>\n","      <td>32474.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2014-05-11</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Australia</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5371</td>\n","      <td>1989</td>\n","      <td>Graduation</td>\n","      <td>Single</td>\n","      <td>21474.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2014-04-08</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>16</td>\n","      <td>24</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>34</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3eee5c3e-41c4-43e1-b468-6a73a5faa792')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3eee5c3e-41c4-43e1-b468-6a73a5faa792 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3eee5c3e-41c4-43e1-b468-6a73a5faa792');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5d1c0d9c-d539-42f7-ac8b-49909038759c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5d1c0d9c-d539-42f7-ac8b-49909038759c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5d1c0d9c-d539-42f7-ac8b-49909038759c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"web"}},"metadata":{},"execution_count":33}],"source":["web = df[df['NumWebPurchases'] != 0]\n","web.head()"]},{"cell_type":"markdown","source":["### `Year_Birth`"],"metadata":{"id":"286bKWn_GYXf"}},{"cell_type":"code","execution_count":34,"metadata":{"id":"2_SccL64NUN_","executionInfo":{"status":"ok","timestamp":1718869212049,"user_tz":-330,"elapsed":34,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}}},"outputs":[],"source":["b = web['Year_Birth'].value_counts().reset_index().head(10)"]},{"cell_type":"code","execution_count":35,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"executionInfo":{"elapsed":33,"status":"ok","timestamp":1718869212049,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"xUxA__dQNjBe","outputId":"c19c09e9-a8e5-4b9b-8b0f-6080896eba16"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Year_Birth  count\n","0        1976     87\n","1        1971     84\n","2        1975     79\n","3        1970     77\n","4        1972     77\n","5        1978     75\n","6        1973     72\n","7        1965     71\n","8        1969     71\n","9        1974     69"],"text/html":["\n","  <div id=\"df-66e3973c-6862-4659-a8e9-ae1c7c9a95b9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year_Birth</th>\n","      <th>count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1976</td>\n","      <td>87</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1971</td>\n","      <td>84</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1975</td>\n","      <td>79</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1970</td>\n","      <td>77</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1972</td>\n","      <td>77</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1978</td>\n","      <td>75</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1973</td>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>1965</td>\n","      <td>71</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>1969</td>\n","      <td>71</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>1974</td>\n","      <td>69</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-66e3973c-6862-4659-a8e9-ae1c7c9a95b9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-66e3973c-6862-4659-a8e9-ae1c7c9a95b9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-66e3973c-6862-4659-a8e9-ae1c7c9a95b9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bf1329f4-155f-4de6-9ce3-297b42ff5715\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bf1329f4-155f-4de6-9ce3-297b42ff5715')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bf1329f4-155f-4de6-9ce3-297b42ff5715 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"b","summary":"{\n  \"name\": \"b\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"Year_Birth\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 1965,\n        \"max\": 1978,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          1969,\n          1971,\n          1978\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 69,\n        \"max\": 87,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          84,\n          72,\n          87\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":35}],"source":["b"]},{"cell_type":"code","execution_count":36,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"executionInfo":{"elapsed":1613,"status":"ok","timestamp":1718869213630,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"P_JK-ecpNtZO","outputId":"0ac2ee9d-76bc-46bf-99ff-098b244aee44"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'No of People')"]},"metadata":{},"execution_count":36},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["ax = sns.barplot(data = b, x = 'Year_Birth' , y ='count')\n","ax.bar_label(ax.containers[0])\n","plt.ylabel(\"No of People\")"]},{"cell_type":"code","execution_count":37,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":14,"status":"ok","timestamp":1718869213630,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"RgT9w-ICN-je","outputId":"25cf4907-30d8-47c4-f0da-2c4ee3fa5e32"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-37-fb0e3f6fd209>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  web['Age'] = df['Dt_Customer'].apply(lambda x: int(x.strftime(\"%Y\"))) - web['Year_Birth']          #creating a column named age to check on which age the person became our customer.\n"]}],"source":["web['Age'] = df['Dt_Customer'].apply(lambda x: int(x.strftime(\"%Y\"))) - web['Year_Birth']          #creating a column named age to check on which age the person became our customer."]},{"cell_type":"code","source":["df['Age'] = df['Dt_Customer'].apply(lambda x: int(x.strftime(\"%Y\"))) - web['Year_Birth']                             #adding age column to df"],"metadata":{"id":"xr4NeYonkao4","executionInfo":{"status":"ok","timestamp":1718869213630,"user_tz":-330,"elapsed":10,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","execution_count":72,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1718869473188,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"NKEzspcCO_64","outputId":"a908c8d6-860d-48e7-cd77-2de8853a2672"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["         ID  Year_Birth   Education Marital_Status   Income  Kidhome  \\\n","0      1826        1970  Graduation       Divorced  84835.0        0   \n","1         1        1961  Graduation         Single  57091.0        0   \n","2     10476        1958  Graduation        Married  67267.0        0   \n","3      1386        1967  Graduation       Together  32474.0        1   \n","4      5371        1989  Graduation         Single  21474.0        1   \n","...     ...         ...         ...            ...      ...      ...   \n","2235  10142        1976         PhD       Divorced  66476.0        0   \n","2236   5263        1977    2n Cycle        Married  31056.0        1   \n","2237     22        1976  Graduation       Divorced  46310.0        1   \n","2238    528        1978  Graduation        Married  65819.0        0   \n","2239   4070        1969         PhD        Married  94871.0        0   \n","\n","      Teenhome Dt_Customer  Recency  MntWines  MntFruits  MntMeatProducts  \\\n","0            0  2014-06-16        0       189        104              379   \n","1            0  2014-06-15        0       464          5               64   \n","2            1  2014-05-13        0       134         11               59   \n","3            1  2014-05-11        0        10          0                1   \n","4            0  2014-04-08        0         6         16               24   \n","...        ...         ...      ...       ...        ...              ...   \n","2235         1  2013-03-07       99       372         18              126   \n","2236         0  2013-01-22       99         5         10               13   \n","2237         0  2012-12-03       99       185          2               88   \n","2238         0  2012-11-29       99       267         38              701   \n","2239         2  2012-09-01       99       169         24              553   \n","\n","      MntFishProducts  MntSweetProducts  MntGoldProds  NumDealsPurchases  \\\n","0                 111               189           218                  1   \n","1                   7                 0            37                  1   \n","2                  15                 2            30                  1   \n","3                   0                 0             0                  1   \n","4                  11                 0            34                  2   \n","...               ...               ...           ...                ...   \n","2235               47                48            78                  2   \n","2236                3                 8            16                  1   \n","2237               15                 5            14                  2   \n","2238              149               165            63                  1   \n","2239              188                 0           144                  1   \n","\n","      NumWebPurchases  NumCatalogPurchases  NumStorePurchases  \\\n","0                   4                    4                  6   \n","1                   7                    3                  7   \n","2                   3                    2                  5   \n","3                   1                    0                  2   \n","4                   3                    1                  2   \n","...               ...                  ...                ...   \n","2235                5                    2                 11   \n","2236                1                    0                  3   \n","2237                6                    1                  5   \n","2238                5                    4                 10   \n","2239                8                    5                  4   \n","\n","      NumWebVisitsMonth  AcceptedCmp3  AcceptedCmp4  AcceptedCmp5  \\\n","0                     1             0             0             0   \n","1                     5             0             0             0   \n","2                     2             0             0             0   \n","3                     7             0             0             0   \n","4                     7             1             0             0   \n","...                 ...           ...           ...           ...   \n","2235                  4             0             0             0   \n","2236                  8             0             0             0   \n","2237                  8             0             0             0   \n","2238                  3             0             0             0   \n","2239                  7             0             1             1   \n","\n","      AcceptedCmp1  AcceptedCmp2  Response  Complain    Country   Age  \n","0                0             0         1         0      Spain  44.0  \n","1                0             1         1         0     Canada  53.0  \n","2                0             0         0         0        USA  56.0  \n","3                0             0         0         0  Australia  47.0  \n","4                0             0         1         0      Spain  25.0  \n","...            ...           ...       ...       ...        ...   ...  \n","2235             0             0         0         0        USA  37.0  \n","2236             0             0         0         0      Spain  36.0  \n","2237             0             0         0         0      Spain  36.0  \n","2238             0             0         0         0      India  34.0  \n","2239             0             0         1         0     Canada  43.0  \n","\n","[2191 rows x 29 columns]"],"text/html":["\n","  <div id=\"df-32e780c7-bef6-4aaf-94db-f970912e0cda\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Year_Birth</th>\n","      <th>Education</th>\n","      <th>Marital_Status</th>\n","      <th>Income</th>\n","      <th>Kidhome</th>\n","      <th>Teenhome</th>\n","      <th>Dt_Customer</th>\n","      <th>Recency</th>\n","      <th>MntWines</th>\n","      <th>MntFruits</th>\n","      <th>MntMeatProducts</th>\n","      <th>MntFishProducts</th>\n","      <th>MntSweetProducts</th>\n","      <th>MntGoldProds</th>\n","      <th>NumDealsPurchases</th>\n","      <th>NumWebPurchases</th>\n","      <th>NumCatalogPurchases</th>\n","      <th>NumStorePurchases</th>\n","      <th>NumWebVisitsMonth</th>\n","      <th>AcceptedCmp3</th>\n","      <th>AcceptedCmp4</th>\n","      <th>AcceptedCmp5</th>\n","      <th>AcceptedCmp1</th>\n","      <th>AcceptedCmp2</th>\n","      <th>Response</th>\n","      <th>Complain</th>\n","      <th>Country</th>\n","      <th>Age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1826</td>\n","      <td>1970</td>\n","      <td>Graduation</td>\n","      <td>Divorced</td>\n","      <td>84835.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2014-06-16</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>104</td>\n","      <td>379</td>\n","      <td>111</td>\n","      <td>189</td>\n","      <td>218</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","      <td>44.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1961</td>\n","      <td>Graduation</td>\n","      <td>Single</td>\n","      <td>57091.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2014-06-15</td>\n","      <td>0</td>\n","      <td>464</td>\n","      <td>5</td>\n","      <td>64</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>37</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Canada</td>\n","      <td>53.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10476</td>\n","      <td>1958</td>\n","      <td>Graduation</td>\n","      <td>Married</td>\n","      <td>67267.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2014-05-13</td>\n","      <td>0</td>\n","      <td>134</td>\n","      <td>11</td>\n","      <td>59</td>\n","      <td>15</td>\n","      <td>2</td>\n","      <td>30</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>USA</td>\n","      <td>56.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1386</td>\n","      <td>1967</td>\n","      <td>Graduation</td>\n","      <td>Together</td>\n","      <td>32474.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2014-05-11</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Australia</td>\n","      <td>47.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5371</td>\n","      <td>1989</td>\n","      <td>Graduation</td>\n","      <td>Single</td>\n","      <td>21474.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2014-04-08</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>16</td>\n","      <td>24</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>34</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","      <td>25.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2235</th>\n","      <td>10142</td>\n","      <td>1976</td>\n","      <td>PhD</td>\n","      <td>Divorced</td>\n","      <td>66476.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2013-03-07</td>\n","      <td>99</td>\n","      <td>372</td>\n","      <td>18</td>\n","      <td>126</td>\n","      <td>47</td>\n","      <td>48</td>\n","      <td>78</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>USA</td>\n","      <td>37.0</td>\n","    </tr>\n","    <tr>\n","      <th>2236</th>\n","      <td>5263</td>\n","      <td>1977</td>\n","      <td>2n Cycle</td>\n","      <td>Married</td>\n","      <td>31056.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2013-01-22</td>\n","      <td>99</td>\n","      <td>5</td>\n","      <td>10</td>\n","      <td>13</td>\n","      <td>3</td>\n","      <td>8</td>\n","      <td>16</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","      <td>36.0</td>\n","    </tr>\n","    <tr>\n","      <th>2237</th>\n","      <td>22</td>\n","      <td>1976</td>\n","      <td>Graduation</td>\n","      <td>Divorced</td>\n","      <td>46310.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2012-12-03</td>\n","      <td>99</td>\n","      <td>185</td>\n","      <td>2</td>\n","      <td>88</td>\n","      <td>15</td>\n","      <td>5</td>\n","      <td>14</td>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","      <td>36.0</td>\n","    </tr>\n","    <tr>\n","      <th>2238</th>\n","      <td>528</td>\n","      <td>1978</td>\n","      <td>Graduation</td>\n","      <td>Married</td>\n","      <td>65819.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2012-11-29</td>\n","      <td>99</td>\n","      <td>267</td>\n","      <td>38</td>\n","      <td>701</td>\n","      <td>149</td>\n","      <td>165</td>\n","      <td>63</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>10</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>India</td>\n","      <td>34.0</td>\n","    </tr>\n","    <tr>\n","      <th>2239</th>\n","      <td>4070</td>\n","      <td>1969</td>\n","      <td>PhD</td>\n","      <td>Married</td>\n","      <td>94871.0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2012-09-01</td>\n","      <td>99</td>\n","      <td>169</td>\n","      <td>24</td>\n","      <td>553</td>\n","      <td>188</td>\n","      <td>0</td>\n","      <td>144</td>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Canada</td>\n","      <td>43.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2191 rows × 29 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-32e780c7-bef6-4aaf-94db-f970912e0cda')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-32e780c7-bef6-4aaf-94db-f970912e0cda button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-32e780c7-bef6-4aaf-94db-f970912e0cda');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0051b72a-a7fb-4a8d-9f2a-3dce5294bf98\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0051b72a-a7fb-4a8d-9f2a-3dce5294bf98')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0051b72a-a7fb-4a8d-9f2a-3dce5294bf98 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"web"}},"metadata":{},"execution_count":72}],"source":["web                                                                                                                  #age column created."]},{"cell_type":"code","execution_count":40,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"executionInfo":{"elapsed":1467,"status":"ok","timestamp":1718869215088,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"VLwWBYfMPH8t","outputId":"122916b0-97a1-46a5-8cd3-9fd892ca571b"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["ax = sns.histplot(web['Age'], bins = 5)                                          #histogram is created to plot the age column. In this the number of people between age 30 - age 40 are more engaged in web purchases as compared to others.\n","ax.bar_label(ax.containers[0]);"]},{"cell_type":"markdown","metadata":{"id":"bbeC3YJlSQgb"},"source":["### `Education`"]},{"cell_type":"code","execution_count":41,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"elapsed":11,"status":"ok","timestamp":1718869215089,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"3O66IrGjPsQd","outputId":"33bee6b0-7e4c-4bf8-c60d-13b2bd4385be"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='count'>"]},"metadata":{},"execution_count":41},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["web['Education'].value_counts().plot(kind = 'pie',autopct = '%1.0f%%')                          #pie chart is plotted for education. Considering education as one of the factors for web-purchases. The number of graduate people for web purchase is more as compared to others."]},{"cell_type":"markdown","metadata":{"id":"ysqCXqfFVbK4"},"source":["### `Marital_Status`"]},{"cell_type":"code","execution_count":42,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"executionInfo":{"elapsed":2219,"status":"ok","timestamp":1718869217301,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"60GEAPU2VlDm","outputId":"2355dcd6-9a36-4909-9fbd-135ee4de03ed"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Marital_Status', ylabel='NumWebPurchases'>"]},"metadata":{},"execution_count":42},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":[" sns.barplot(data = web, x = 'Marital_Status', y ='NumWebPurchases')                                    #the number of YOLO is greater for web purchases as compared to others."]},{"cell_type":"code","execution_count":43,"metadata":{"id":"7cokQWz7mgOT","executionInfo":{"status":"ok","timestamp":1718869217303,"user_tz":-330,"elapsed":8,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}}},"outputs":[],"source":["num = [ i for i in web.columns if web[i].dtype != 0]"]},{"cell_type":"code","execution_count":44,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":571},"executionInfo":{"elapsed":2658,"status":"ok","timestamp":1718869219954,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"1B2rn-ShmhIa","outputId":"4d05d17e-71d0-462c-b69e-6fb5b4c4255b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":44},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["sns.heatmap(web[['Income', 'Kidhome', 'Teenhome', 'Recency','NumWebPurchases','Age']].corr()[['Income', 'Kidhome', 'Teenhome', 'Recency','NumWebPurchases','Age']], annot = True)   #correlation/"]},{"cell_type":"code","execution_count":45,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1718869219955,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"},"user_tz":-330},"id":"NJ0rNOc8UAti","outputId":"77449e39-1465-4e28-d23e-ae4651718982"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["         ID  Year_Birth   Education Marital_Status   Income  Kidhome  \\\n","0      1826        1970  Graduation       Divorced  84835.0        0   \n","1         1        1961  Graduation         Single  57091.0        0   \n","2     10476        1958  Graduation        Married  67267.0        0   \n","3      1386        1967  Graduation       Together  32474.0        1   \n","4      5371        1989  Graduation         Single  21474.0        1   \n","...     ...         ...         ...            ...      ...      ...   \n","2235  10142        1976         PhD       Divorced  66476.0        0   \n","2236   5263        1977    2n Cycle        Married  31056.0        1   \n","2237     22        1976  Graduation       Divorced  46310.0        1   \n","2238    528        1978  Graduation        Married  65819.0        0   \n","2239   4070        1969         PhD        Married  94871.0        0   \n","\n","      Teenhome Dt_Customer  Recency  MntWines  MntFruits  MntMeatProducts  \\\n","0            0  2014-06-16        0       189        104              379   \n","1            0  2014-06-15        0       464          5               64   \n","2            1  2014-05-13        0       134         11               59   \n","3            1  2014-05-11        0        10          0                1   \n","4            0  2014-04-08        0         6         16               24   \n","...        ...         ...      ...       ...        ...              ...   \n","2235         1  2013-03-07       99       372         18              126   \n","2236         0  2013-01-22       99         5         10               13   \n","2237         0  2012-12-03       99       185          2               88   \n","2238         0  2012-11-29       99       267         38              701   \n","2239         2  2012-09-01       99       169         24              553   \n","\n","      MntFishProducts  MntSweetProducts  MntGoldProds  NumDealsPurchases  \\\n","0                 111               189           218                  1   \n","1                   7                 0            37                  1   \n","2                  15                 2            30                  1   \n","3                   0                 0             0                  1   \n","4                  11                 0            34                  2   \n","...               ...               ...           ...                ...   \n","2235               47                48            78                  2   \n","2236                3                 8            16                  1   \n","2237               15                 5            14                  2   \n","2238              149               165            63                  1   \n","2239              188                 0           144                  1   \n","\n","      NumWebPurchases  NumCatalogPurchases  NumStorePurchases  \\\n","0                   4                    4                  6   \n","1                   7                    3                  7   \n","2                   3                    2                  5   \n","3                   1                    0                  2   \n","4                   3                    1                  2   \n","...               ...                  ...                ...   \n","2235                5                    2                 11   \n","2236                1                    0                  3   \n","2237                6                    1                  5   \n","2238                5                    4                 10   \n","2239                8                    5                  4   \n","\n","      NumWebVisitsMonth  AcceptedCmp3  AcceptedCmp4  AcceptedCmp5  \\\n","0                     1             0             0             0   \n","1                     5             0             0             0   \n","2                     2             0             0             0   \n","3                     7             0             0             0   \n","4                     7             1             0             0   \n","...                 ...           ...           ...           ...   \n","2235                  4             0             0             0   \n","2236                  8             0             0             0   \n","2237                  8             0             0             0   \n","2238                  3             0             0             0   \n","2239                  7             0             1             1   \n","\n","      AcceptedCmp1  AcceptedCmp2  Response  Complain    Country   Age  \n","0                0             0         1         0      Spain  44.0  \n","1                0             1         1         0     Canada  53.0  \n","2                0             0         0         0        USA  56.0  \n","3                0             0         0         0  Australia  47.0  \n","4                0             0         1         0      Spain  25.0  \n","...            ...           ...       ...       ...        ...   ...  \n","2235             0             0         0         0        USA  37.0  \n","2236             0             0         0         0      Spain  36.0  \n","2237             0             0         0         0      Spain  36.0  \n","2238             0             0         0         0      India  34.0  \n","2239             0             0         1         0     Canada  43.0  \n","\n","[2191 rows x 29 columns]"],"text/html":["\n","  <div id=\"df-6c34617c-a2fe-442a-9c83-c41dfebbdf17\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Year_Birth</th>\n","      <th>Education</th>\n","      <th>Marital_Status</th>\n","      <th>Income</th>\n","      <th>Kidhome</th>\n","      <th>Teenhome</th>\n","      <th>Dt_Customer</th>\n","      <th>Recency</th>\n","      <th>MntWines</th>\n","      <th>MntFruits</th>\n","      <th>MntMeatProducts</th>\n","      <th>MntFishProducts</th>\n","      <th>MntSweetProducts</th>\n","      <th>MntGoldProds</th>\n","      <th>NumDealsPurchases</th>\n","      <th>NumWebPurchases</th>\n","      <th>NumCatalogPurchases</th>\n","      <th>NumStorePurchases</th>\n","      <th>NumWebVisitsMonth</th>\n","      <th>AcceptedCmp3</th>\n","      <th>AcceptedCmp4</th>\n","      <th>AcceptedCmp5</th>\n","      <th>AcceptedCmp1</th>\n","      <th>AcceptedCmp2</th>\n","      <th>Response</th>\n","      <th>Complain</th>\n","      <th>Country</th>\n","      <th>Age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1826</td>\n","      <td>1970</td>\n","      <td>Graduation</td>\n","      <td>Divorced</td>\n","      <td>84835.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2014-06-16</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>104</td>\n","      <td>379</td>\n","      <td>111</td>\n","      <td>189</td>\n","      <td>218</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","      <td>44.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1961</td>\n","      <td>Graduation</td>\n","      <td>Single</td>\n","      <td>57091.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2014-06-15</td>\n","      <td>0</td>\n","      <td>464</td>\n","      <td>5</td>\n","      <td>64</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>37</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Canada</td>\n","      <td>53.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10476</td>\n","      <td>1958</td>\n","      <td>Graduation</td>\n","      <td>Married</td>\n","      <td>67267.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2014-05-13</td>\n","      <td>0</td>\n","      <td>134</td>\n","      <td>11</td>\n","      <td>59</td>\n","      <td>15</td>\n","      <td>2</td>\n","      <td>30</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>USA</td>\n","      <td>56.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1386</td>\n","      <td>1967</td>\n","      <td>Graduation</td>\n","      <td>Together</td>\n","      <td>32474.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2014-05-11</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Australia</td>\n","      <td>47.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5371</td>\n","      <td>1989</td>\n","      <td>Graduation</td>\n","      <td>Single</td>\n","      <td>21474.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2014-04-08</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>16</td>\n","      <td>24</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>34</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","      <td>25.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2235</th>\n","      <td>10142</td>\n","      <td>1976</td>\n","      <td>PhD</td>\n","      <td>Divorced</td>\n","      <td>66476.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2013-03-07</td>\n","      <td>99</td>\n","      <td>372</td>\n","      <td>18</td>\n","      <td>126</td>\n","      <td>47</td>\n","      <td>48</td>\n","      <td>78</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>USA</td>\n","      <td>37.0</td>\n","    </tr>\n","    <tr>\n","      <th>2236</th>\n","      <td>5263</td>\n","      <td>1977</td>\n","      <td>2n Cycle</td>\n","      <td>Married</td>\n","      <td>31056.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2013-01-22</td>\n","      <td>99</td>\n","      <td>5</td>\n","      <td>10</td>\n","      <td>13</td>\n","      <td>3</td>\n","      <td>8</td>\n","      <td>16</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","      <td>36.0</td>\n","    </tr>\n","    <tr>\n","      <th>2237</th>\n","      <td>22</td>\n","      <td>1976</td>\n","      <td>Graduation</td>\n","      <td>Divorced</td>\n","      <td>46310.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2012-12-03</td>\n","      <td>99</td>\n","      <td>185</td>\n","      <td>2</td>\n","      <td>88</td>\n","      <td>15</td>\n","      <td>5</td>\n","      <td>14</td>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","      <td>36.0</td>\n","    </tr>\n","    <tr>\n","      <th>2238</th>\n","      <td>528</td>\n","      <td>1978</td>\n","      <td>Graduation</td>\n","      <td>Married</td>\n","      <td>65819.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2012-11-29</td>\n","      <td>99</td>\n","      <td>267</td>\n","      <td>38</td>\n","      <td>701</td>\n","      <td>149</td>\n","      <td>165</td>\n","      <td>63</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>10</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>India</td>\n","      <td>34.0</td>\n","    </tr>\n","    <tr>\n","      <th>2239</th>\n","      <td>4070</td>\n","      <td>1969</td>\n","      <td>PhD</td>\n","      <td>Married</td>\n","      <td>94871.0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2012-09-01</td>\n","      <td>99</td>\n","      <td>169</td>\n","      <td>24</td>\n","      <td>553</td>\n","      <td>188</td>\n","      <td>0</td>\n","      <td>144</td>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Canada</td>\n","      <td>43.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2191 rows × 29 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6c34617c-a2fe-442a-9c83-c41dfebbdf17')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6c34617c-a2fe-442a-9c83-c41dfebbdf17 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6c34617c-a2fe-442a-9c83-c41dfebbdf17');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e3f3c199-b529-42fb-b185-4deafb55dffc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e3f3c199-b529-42fb-b185-4deafb55dffc')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e3f3c199-b529-42fb-b185-4deafb55dffc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"web"}},"metadata":{},"execution_count":45}],"source":["web"]},{"cell_type":"markdown","source":["### `Income`"],"metadata":{"id":"hAUwqWgfHTIl"}},{"cell_type":"code","execution_count":46,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"2URaOhr2rb0Y","executionInfo":{"status":"ok","timestamp":1718869221578,"user_tz":-330,"elapsed":1629,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}},"outputId":"6861770e-ee6f-43a5-fbd9-6c2623c3934f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Income', ylabel='Count'>"]},"metadata":{},"execution_count":46},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["sns.histplot(web['Income'], bins = 8)                                                             #histogram has been plotted for Income"]},{"cell_type":"markdown","source":["### `childhome`"],"metadata":{"id":"JbNUQAn-oT_q"}},{"cell_type":"code","source":["df['childhome'] = df['Kidhome'] + df['Teenhome']                                               #feature engineering"],"metadata":{"id":"kTMLveKkoYCa","executionInfo":{"status":"ok","timestamp":1718869221579,"user_tz":-330,"elapsed":25,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}}},"execution_count":47,"outputs":[]},{"cell_type":"code","source":["df.drop(columns = ['Kidhome','Teenhome'], inplace = True)"],"metadata":{"id":"nwPy23AYZ7dd","executionInfo":{"status":"ok","timestamp":1718869221579,"user_tz":-330,"elapsed":24,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}}},"execution_count":48,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"fNnw825xdUiV","executionInfo":{"status":"ok","timestamp":1718869221579,"user_tz":-330,"elapsed":24,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}},"outputId":"51b2c08a-3d2d-4eaf-dc5c-cf91edc76a20"},"execution_count":49,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         ID  Year_Birth   Education Marital_Status   Income Dt_Customer  \\\n","0      1826        1970  Graduation       Divorced  84835.0  2014-06-16   \n","1         1        1961  Graduation         Single  57091.0  2014-06-15   \n","2     10476        1958  Graduation        Married  67267.0  2014-05-13   \n","3      1386        1967  Graduation       Together  32474.0  2014-05-11   \n","4      5371        1989  Graduation         Single  21474.0  2014-04-08   \n","...     ...         ...         ...            ...      ...         ...   \n","2235  10142        1976         PhD       Divorced  66476.0  2013-03-07   \n","2236   5263        1977    2n Cycle        Married  31056.0  2013-01-22   \n","2237     22        1976  Graduation       Divorced  46310.0  2012-12-03   \n","2238    528        1978  Graduation        Married  65819.0  2012-11-29   \n","2239   4070        1969         PhD        Married  94871.0  2012-09-01   \n","\n","      Recency  MntWines  MntFruits  MntMeatProducts  MntFishProducts  \\\n","0           0       189        104              379              111   \n","1           0       464          5               64                7   \n","2           0       134         11               59               15   \n","3           0        10          0                1                0   \n","4           0         6         16               24               11   \n","...       ...       ...        ...              ...              ...   \n","2235       99       372         18              126               47   \n","2236       99         5         10               13                3   \n","2237       99       185          2               88               15   \n","2238       99       267         38              701              149   \n","2239       99       169         24              553              188   \n","\n","      MntSweetProducts  MntGoldProds  NumDealsPurchases  NumWebPurchases  \\\n","0                  189           218                  1                4   \n","1                    0            37                  1                7   \n","2                    2            30                  1                3   \n","3                    0             0                  1                1   \n","4                    0            34                  2                3   \n","...                ...           ...                ...              ...   \n","2235                48            78                  2                5   \n","2236                 8            16                  1                1   \n","2237                 5            14                  2                6   \n","2238               165            63                  1                5   \n","2239                 0           144                  1                8   \n","\n","      NumCatalogPurchases  NumStorePurchases  NumWebVisitsMonth  AcceptedCmp3  \\\n","0                       4                  6                  1             0   \n","1                       3                  7                  5             0   \n","2                       2                  5                  2             0   \n","3                       0                  2                  7             0   \n","4                       1                  2                  7             1   \n","...                   ...                ...                ...           ...   \n","2235                    2                 11                  4             0   \n","2236                    0                  3                  8             0   \n","2237                    1                  5                  8             0   \n","2238                    4                 10                  3             0   \n","2239                    5                  4                  7             0   \n","\n","      AcceptedCmp4  AcceptedCmp5  AcceptedCmp1  AcceptedCmp2  Response  \\\n","0                0             0             0             0         1   \n","1                0             0             0             1         1   \n","2                0             0             0             0         0   \n","3                0             0             0             0         0   \n","4                0             0             0             0         1   \n","...            ...           ...           ...           ...       ...   \n","2235             0             0             0             0         0   \n","2236             0             0             0             0         0   \n","2237             0             0             0             0         0   \n","2238             0             0             0             0         0   \n","2239             1             1             0             0         1   \n","\n","      Complain    Country   Age  childhome  \n","0            0      Spain  44.0          0  \n","1            0     Canada  53.0          0  \n","2            0        USA  56.0          1  \n","3            0  Australia  47.0          2  \n","4            0      Spain  25.0          1  \n","...        ...        ...   ...        ...  \n","2235         0        USA  37.0          1  \n","2236         0      Spain  36.0          1  \n","2237         0      Spain  36.0          1  \n","2238         0      India  34.0          0  \n","2239         0     Canada  43.0          2  \n","\n","[2240 rows x 28 columns]"],"text/html":["\n","  <div id=\"df-ea8b8e48-4dbb-4b9b-aeef-60616cc885d1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Year_Birth</th>\n","      <th>Education</th>\n","      <th>Marital_Status</th>\n","      <th>Income</th>\n","      <th>Dt_Customer</th>\n","      <th>Recency</th>\n","      <th>MntWines</th>\n","      <th>MntFruits</th>\n","      <th>MntMeatProducts</th>\n","      <th>MntFishProducts</th>\n","      <th>MntSweetProducts</th>\n","      <th>MntGoldProds</th>\n","      <th>NumDealsPurchases</th>\n","      <th>NumWebPurchases</th>\n","      <th>NumCatalogPurchases</th>\n","      <th>NumStorePurchases</th>\n","      <th>NumWebVisitsMonth</th>\n","      <th>AcceptedCmp3</th>\n","      <th>AcceptedCmp4</th>\n","      <th>AcceptedCmp5</th>\n","      <th>AcceptedCmp1</th>\n","      <th>AcceptedCmp2</th>\n","      <th>Response</th>\n","      <th>Complain</th>\n","      <th>Country</th>\n","      <th>Age</th>\n","      <th>childhome</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1826</td>\n","      <td>1970</td>\n","      <td>Graduation</td>\n","      <td>Divorced</td>\n","      <td>84835.0</td>\n","      <td>2014-06-16</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>104</td>\n","      <td>379</td>\n","      <td>111</td>\n","      <td>189</td>\n","      <td>218</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","      <td>44.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1961</td>\n","      <td>Graduation</td>\n","      <td>Single</td>\n","      <td>57091.0</td>\n","      <td>2014-06-15</td>\n","      <td>0</td>\n","      <td>464</td>\n","      <td>5</td>\n","      <td>64</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>37</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Canada</td>\n","      <td>53.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10476</td>\n","      <td>1958</td>\n","      <td>Graduation</td>\n","      <td>Married</td>\n","      <td>67267.0</td>\n","      <td>2014-05-13</td>\n","      <td>0</td>\n","      <td>134</td>\n","      <td>11</td>\n","      <td>59</td>\n","      <td>15</td>\n","      <td>2</td>\n","      <td>30</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>USA</td>\n","      <td>56.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1386</td>\n","      <td>1967</td>\n","      <td>Graduation</td>\n","      <td>Together</td>\n","      <td>32474.0</td>\n","      <td>2014-05-11</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Australia</td>\n","      <td>47.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5371</td>\n","      <td>1989</td>\n","      <td>Graduation</td>\n","      <td>Single</td>\n","      <td>21474.0</td>\n","      <td>2014-04-08</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>16</td>\n","      <td>24</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>34</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","      <td>25.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2235</th>\n","      <td>10142</td>\n","      <td>1976</td>\n","      <td>PhD</td>\n","      <td>Divorced</td>\n","      <td>66476.0</td>\n","      <td>2013-03-07</td>\n","      <td>99</td>\n","      <td>372</td>\n","      <td>18</td>\n","      <td>126</td>\n","      <td>47</td>\n","      <td>48</td>\n","      <td>78</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>11</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>USA</td>\n","      <td>37.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2236</th>\n","      <td>5263</td>\n","      <td>1977</td>\n","      <td>2n Cycle</td>\n","      <td>Married</td>\n","      <td>31056.0</td>\n","      <td>2013-01-22</td>\n","      <td>99</td>\n","      <td>5</td>\n","      <td>10</td>\n","      <td>13</td>\n","      <td>3</td>\n","      <td>8</td>\n","      <td>16</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","      <td>36.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2237</th>\n","      <td>22</td>\n","      <td>1976</td>\n","      <td>Graduation</td>\n","      <td>Divorced</td>\n","      <td>46310.0</td>\n","      <td>2012-12-03</td>\n","      <td>99</td>\n","      <td>185</td>\n","      <td>2</td>\n","      <td>88</td>\n","      <td>15</td>\n","      <td>5</td>\n","      <td>14</td>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","      <td>36.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2238</th>\n","      <td>528</td>\n","      <td>1978</td>\n","      <td>Graduation</td>\n","      <td>Married</td>\n","      <td>65819.0</td>\n","      <td>2012-11-29</td>\n","      <td>99</td>\n","      <td>267</td>\n","      <td>38</td>\n","      <td>701</td>\n","      <td>149</td>\n","      <td>165</td>\n","      <td>63</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>10</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>India</td>\n","      <td>34.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2239</th>\n","      <td>4070</td>\n","      <td>1969</td>\n","      <td>PhD</td>\n","      <td>Married</td>\n","      <td>94871.0</td>\n","      <td>2012-09-01</td>\n","      <td>99</td>\n","      <td>169</td>\n","      <td>24</td>\n","      <td>553</td>\n","      <td>188</td>\n","      <td>0</td>\n","      <td>144</td>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Canada</td>\n","      <td>43.0</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2240 rows × 28 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ea8b8e48-4dbb-4b9b-aeef-60616cc885d1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ea8b8e48-4dbb-4b9b-aeef-60616cc885d1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ea8b8e48-4dbb-4b9b-aeef-60616cc885d1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f95df263-dba7-4000-9e9c-34d37a4e6b9b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f95df263-dba7-4000-9e9c-34d37a4e6b9b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f95df263-dba7-4000-9e9c-34d37a4e6b9b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":[],"metadata":{"id":"dSQwy4ardd6i","executionInfo":{"status":"ok","timestamp":1718869221579,"user_tz":-330,"elapsed":23,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}}},"execution_count":49,"outputs":[]},{"cell_type":"code","source":["ax = df['childhome'].value_counts().plot(kind = 'barh')\n","ax.bar_label(ax.containers[0]);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"id":"JkkE7_d9ff_I","executionInfo":{"status":"ok","timestamp":1718869221580,"user_tz":-330,"elapsed":24,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}},"outputId":"00b236aa-4423-436c-9e20-36dab627ede5"},"execution_count":50,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"v7wQMtDrmrBI"},"source":["### **Inferences**\n","1. The number of people between `age 30 - age 40` are more engaged in web purchases as compared to others.\n","\n","2. Considering education as one of the factors for web-purchases. The number of `educated` people for web purchase is more as compared to others.\n","\n","3. People having salaries between `25k and 80k` are highly active on web purchases.\n","\n","4. Customers who have `one child` at home are likely to visit the website for purchases."]},{"cell_type":"markdown","source":["## 3.Which marketing campaign was the most successful?"],"metadata":{"id":"pXXTLPlrf9J5"}},{"cell_type":"code","source":["camp = df[['AcceptedCmp1','AcceptedCmp2','AcceptedCmp3','AcceptedCmp4','AcceptedCmp5','Response']]\n","camp.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"jcfmlWv8gBOe","executionInfo":{"status":"ok","timestamp":1718869221580,"user_tz":-330,"elapsed":23,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}},"outputId":"38fff939-a94c-4115-d0fd-026f05a9f79c"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   AcceptedCmp1  AcceptedCmp2  AcceptedCmp3  AcceptedCmp4  AcceptedCmp5  \\\n","0             0             0             0             0             0   \n","1             0             1             0             0             0   \n","2             0             0             0             0             0   \n","3             0             0             0             0             0   \n","4             0             0             1             0             0   \n","\n","   Response  \n","0         1  \n","1         1  \n","2         0  \n","3         0  \n","4         1  "],"text/html":["\n","  <div id=\"df-bda73222-0410-47dc-b8ed-4287379ec487\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AcceptedCmp1</th>\n","      <th>AcceptedCmp2</th>\n","      <th>AcceptedCmp3</th>\n","      <th>AcceptedCmp4</th>\n","      <th>AcceptedCmp5</th>\n","      <th>Response</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bda73222-0410-47dc-b8ed-4287379ec487')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bda73222-0410-47dc-b8ed-4287379ec487 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bda73222-0410-47dc-b8ed-4287379ec487');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-33d330fb-3146-4b5d-bc43-0afb0eb40dec\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-33d330fb-3146-4b5d-bc43-0afb0eb40dec')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-33d330fb-3146-4b5d-bc43-0afb0eb40dec button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"camp","summary":"{\n  \"name\": \"camp\",\n  \"rows\": 2240,\n  \"fields\": [\n    {\n      \"column\": \"AcceptedCmp1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AcceptedCmp2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AcceptedCmp3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AcceptedCmp4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AcceptedCmp5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Response\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["sum = []\n","for i in camp.columns:\n","  sum.append(camp[i].sum())\n","print(sum)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"StHQbyFhgKMr","executionInfo":{"status":"ok","timestamp":1718869221580,"user_tz":-330,"elapsed":22,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}},"outputId":"0edd4782-438e-47a0-cf6f-f65ae2cfdddd"},"execution_count":52,"outputs":[{"output_type":"stream","name":"stdout","text":["[144, 30, 163, 167, 163, 334]\n"]}]},{"cell_type":"code","source":["dic = {}\n","dic['campaign'] = [i for i in camp.columns]\n","dic['total_customer'] = [camp[i].sum() for i in camp.columns]"],"metadata":{"id":"QOr6n-hYgauv","executionInfo":{"status":"ok","timestamp":1718869221580,"user_tz":-330,"elapsed":19,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}}},"execution_count":53,"outputs":[]},{"cell_type":"code","source":["dic"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N-sT6Qnvg2Xt","executionInfo":{"status":"ok","timestamp":1718869221582,"user_tz":-330,"elapsed":21,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}},"outputId":"86f38584-4e4d-4218-c7c9-7b404e7ef324"},"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'campaign': ['AcceptedCmp1',\n","  'AcceptedCmp2',\n","  'AcceptedCmp3',\n","  'AcceptedCmp4',\n","  'AcceptedCmp5',\n","  'Response'],\n"," 'total_customer': [144, 30, 163, 167, 163, 334]}"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["camp_results = pd.DataFrame(dic)\n","camp_results"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"KO4Ru4JNg4Uh","executionInfo":{"status":"ok","timestamp":1718869221582,"user_tz":-330,"elapsed":19,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}},"outputId":"f12dcbce-0947-4ec4-a7ff-3d9ca1a239ba"},"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       campaign  total_customer\n","0  AcceptedCmp1             144\n","1  AcceptedCmp2              30\n","2  AcceptedCmp3             163\n","3  AcceptedCmp4             167\n","4  AcceptedCmp5             163\n","5      Response             334"],"text/html":["\n","  <div id=\"df-13efc367-d73f-4441-b8ae-29d3056fb05d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>campaign</th>\n","      <th>total_customer</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>AcceptedCmp1</td>\n","      <td>144</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>AcceptedCmp2</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>AcceptedCmp3</td>\n","      <td>163</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>AcceptedCmp4</td>\n","      <td>167</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>AcceptedCmp5</td>\n","      <td>163</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Response</td>\n","      <td>334</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-13efc367-d73f-4441-b8ae-29d3056fb05d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-13efc367-d73f-4441-b8ae-29d3056fb05d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-13efc367-d73f-4441-b8ae-29d3056fb05d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-154b781d-4ef6-4947-b9e5-be086db0dc1a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-154b781d-4ef6-4947-b9e5-be086db0dc1a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-154b781d-4ef6-4947-b9e5-be086db0dc1a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"camp_results","summary":"{\n  \"name\": \"camp_results\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"campaign\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"AcceptedCmp1\",\n          \"AcceptedCmp2\",\n          \"Response\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_customer\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 97,\n        \"min\": 30,\n        \"max\": 334,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          30,\n          334,\n          163\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["figure = plt.figure(figsize = (10,5))\n","ax = sns.barplot(data = camp_results, x = 'campaign', y = 'total_customer')\n","plt.xticks(rotation = 45)\n","ax.bar_label(ax.containers[0]);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":540},"id":"4abDfyedhAX2","executionInfo":{"status":"ok","timestamp":1718869223290,"user_tz":-330,"elapsed":1726,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}},"outputId":"99cc5d29-161e-43f1-9d26-e0d11087836a"},"execution_count":56,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### **Inference**\n","1. `Last held campaign` was the most successful with 334 new customers."],"metadata":{"id":"zAjRe_mHZq5w"}},{"cell_type":"markdown","source":["## 4. What does the average customer look like?\n"],"metadata":{"id":"lwb0y1qxaJL8"}},{"cell_type":"code","source":["df.head()"],"metadata":{"id":"EWUpZnWEhk9e","executionInfo":{"status":"ok","timestamp":1718869223290,"user_tz":-330,"elapsed":38,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}},"colab":{"base_uri":"https://localhost:8080/","height":226},"outputId":"f1456aa1-e6f2-4151-9f05-cc5f952d821f"},"execution_count":57,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      ID  Year_Birth   Education Marital_Status   Income Dt_Customer  Recency  \\\n","0   1826        1970  Graduation       Divorced  84835.0  2014-06-16        0   \n","1      1        1961  Graduation         Single  57091.0  2014-06-15        0   \n","2  10476        1958  Graduation        Married  67267.0  2014-05-13        0   \n","3   1386        1967  Graduation       Together  32474.0  2014-05-11        0   \n","4   5371        1989  Graduation         Single  21474.0  2014-04-08        0   \n","\n","   MntWines  MntFruits  MntMeatProducts  MntFishProducts  MntSweetProducts  \\\n","0       189        104              379              111               189   \n","1       464          5               64                7                 0   \n","2       134         11               59               15                 2   \n","3        10          0                1                0                 0   \n","4         6         16               24               11                 0   \n","\n","   MntGoldProds  NumDealsPurchases  NumWebPurchases  NumCatalogPurchases  \\\n","0           218                  1                4                    4   \n","1            37                  1                7                    3   \n","2            30                  1                3                    2   \n","3             0                  1                1                    0   \n","4            34                  2                3                    1   \n","\n","   NumStorePurchases  NumWebVisitsMonth  AcceptedCmp3  AcceptedCmp4  \\\n","0                  6                  1             0             0   \n","1                  7                  5             0             0   \n","2                  5                  2             0             0   \n","3                  2                  7             0             0   \n","4                  2                  7             1             0   \n","\n","   AcceptedCmp5  AcceptedCmp1  AcceptedCmp2  Response  Complain    Country  \\\n","0             0             0             0         1         0      Spain   \n","1             0             0             1         1         0     Canada   \n","2             0             0             0         0         0        USA   \n","3             0             0             0         0         0  Australia   \n","4             0             0             0         1         0      Spain   \n","\n","    Age  childhome  \n","0  44.0          0  \n","1  53.0          0  \n","2  56.0          1  \n","3  47.0          2  \n","4  25.0          1  "],"text/html":["\n","  <div id=\"df-8cd4285c-199d-4439-9474-23ed18035c23\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Year_Birth</th>\n","      <th>Education</th>\n","      <th>Marital_Status</th>\n","      <th>Income</th>\n","      <th>Dt_Customer</th>\n","      <th>Recency</th>\n","      <th>MntWines</th>\n","      <th>MntFruits</th>\n","      <th>MntMeatProducts</th>\n","      <th>MntFishProducts</th>\n","      <th>MntSweetProducts</th>\n","      <th>MntGoldProds</th>\n","      <th>NumDealsPurchases</th>\n","      <th>NumWebPurchases</th>\n","      <th>NumCatalogPurchases</th>\n","      <th>NumStorePurchases</th>\n","      <th>NumWebVisitsMonth</th>\n","      <th>AcceptedCmp3</th>\n","      <th>AcceptedCmp4</th>\n","      <th>AcceptedCmp5</th>\n","      <th>AcceptedCmp1</th>\n","      <th>AcceptedCmp2</th>\n","      <th>Response</th>\n","      <th>Complain</th>\n","      <th>Country</th>\n","      <th>Age</th>\n","      <th>childhome</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1826</td>\n","      <td>1970</td>\n","      <td>Graduation</td>\n","      <td>Divorced</td>\n","      <td>84835.0</td>\n","      <td>2014-06-16</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>104</td>\n","      <td>379</td>\n","      <td>111</td>\n","      <td>189</td>\n","      <td>218</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","      <td>44.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1961</td>\n","      <td>Graduation</td>\n","      <td>Single</td>\n","      <td>57091.0</td>\n","      <td>2014-06-15</td>\n","      <td>0</td>\n","      <td>464</td>\n","      <td>5</td>\n","      <td>64</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>37</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Canada</td>\n","      <td>53.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10476</td>\n","      <td>1958</td>\n","      <td>Graduation</td>\n","      <td>Married</td>\n","      <td>67267.0</td>\n","      <td>2014-05-13</td>\n","      <td>0</td>\n","      <td>134</td>\n","      <td>11</td>\n","      <td>59</td>\n","      <td>15</td>\n","      <td>2</td>\n","      <td>30</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>USA</td>\n","      <td>56.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1386</td>\n","      <td>1967</td>\n","      <td>Graduation</td>\n","      <td>Together</td>\n","      <td>32474.0</td>\n","      <td>2014-05-11</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Australia</td>\n","      <td>47.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5371</td>\n","      <td>1989</td>\n","      <td>Graduation</td>\n","      <td>Single</td>\n","      <td>21474.0</td>\n","      <td>2014-04-08</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>16</td>\n","      <td>24</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>34</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Spain</td>\n","      <td>25.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8cd4285c-199d-4439-9474-23ed18035c23')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8cd4285c-199d-4439-9474-23ed18035c23 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8cd4285c-199d-4439-9474-23ed18035c23');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-616ed703-cb74-4667-bbfd-0a050fd10e35\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-616ed703-cb74-4667-bbfd-0a050fd10e35')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-616ed703-cb74-4667-bbfd-0a050fd10e35 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["df.describe(include = 'all')                                                        #include = 'all' consist of all columns including catagorical columns."],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":518},"id":"QPG0SuGlaP8i","executionInfo":{"status":"ok","timestamp":1718869223291,"user_tz":-330,"elapsed":38,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}},"outputId":"37bb5900-e9c5-4281-b4d5-8d71c1f04cb7"},"execution_count":58,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  ID   Year_Birth   Education Marital_Status         Income  \\\n","count    2240.000000  2240.000000        2240           2240    2240.000000   \n","unique           NaN          NaN           5              8            NaN   \n","top              NaN          NaN  Graduation        Married            NaN   \n","freq             NaN          NaN        1127            864            NaN   \n","mean     5592.159821  1968.852232         NaN            NaN   52019.434116   \n","min         0.000000  1932.000000         NaN            NaN    3000.000000   \n","25%      2828.250000  1959.000000         NaN            NaN   35538.750000   \n","50%      5458.500000  1970.000000         NaN            NaN   51741.500000   \n","75%      8427.750000  1977.000000         NaN            NaN   68289.750000   \n","max     11191.000000  1996.000000         NaN            NaN  162397.000000   \n","std      3246.662198    11.771725         NaN            NaN   21525.283094   \n","\n","                          Dt_Customer      Recency     MntWines    MntFruits  \\\n","count                            2240  2240.000000  2240.000000  2240.000000   \n","unique                            NaN          NaN          NaN          NaN   \n","top                               NaN          NaN          NaN          NaN   \n","freq                              NaN          NaN          NaN          NaN   \n","mean    2013-07-10 10:01:42.857142784    49.109375   303.935714    26.302232   \n","min               2012-07-30 00:00:00     0.000000     0.000000     0.000000   \n","25%               2013-01-16 00:00:00    24.000000    23.750000     1.000000   \n","50%               2013-07-08 12:00:00    49.000000   173.500000     8.000000   \n","75%               2013-12-30 06:00:00    74.000000   504.250000    33.000000   \n","max               2014-06-29 00:00:00    99.000000  1493.000000   199.000000   \n","std                               NaN    28.962453   336.597393    39.773434   \n","\n","        MntMeatProducts  MntFishProducts  MntSweetProducts  MntGoldProds  \\\n","count       2240.000000      2240.000000       2240.000000   2240.000000   \n","unique              NaN              NaN               NaN           NaN   \n","top                 NaN              NaN               NaN           NaN   \n","freq                NaN              NaN               NaN           NaN   \n","mean         166.950000        37.525446         27.062946     44.021875   \n","min            0.000000         0.000000          0.000000      0.000000   \n","25%           16.000000         3.000000          1.000000      9.000000   \n","50%           67.000000        12.000000          8.000000     24.000000   \n","75%          232.000000        50.000000         33.000000     56.000000   \n","max         1725.000000       259.000000        263.000000    362.000000   \n","std          225.715373        54.628979         41.280498     52.167439   \n","\n","        NumDealsPurchases  NumWebPurchases  NumCatalogPurchases  \\\n","count         2240.000000      2240.000000          2240.000000   \n","unique                NaN              NaN                  NaN   \n","top                   NaN              NaN                  NaN   \n","freq                  NaN              NaN                  NaN   \n","mean             2.325000         4.084821             2.662054   \n","min              0.000000         0.000000             0.000000   \n","25%              1.000000         2.000000             0.000000   \n","50%              2.000000         4.000000             2.000000   \n","75%              3.000000         6.000000             4.000000   \n","max             15.000000        27.000000            28.000000   \n","std              1.932238         2.778714             2.923101   \n","\n","        NumStorePurchases  NumWebVisitsMonth  AcceptedCmp3  AcceptedCmp4  \\\n","count         2240.000000        2240.000000   2240.000000   2240.000000   \n","unique                NaN                NaN           NaN           NaN   \n","top                   NaN                NaN           NaN           NaN   \n","freq                  NaN                NaN           NaN           NaN   \n","mean             5.790179           5.316518      0.072768      0.074554   \n","min              0.000000           0.000000      0.000000      0.000000   \n","25%              3.000000           3.000000      0.000000      0.000000   \n","50%              5.000000           6.000000      0.000000      0.000000   \n","75%              8.000000           7.000000      0.000000      0.000000   \n","max             13.000000          20.000000      1.000000      1.000000   \n","std              3.250958           2.426645      0.259813      0.262728   \n","\n","        AcceptedCmp5  AcceptedCmp1  AcceptedCmp2     Response     Complain  \\\n","count    2240.000000   2240.000000   2240.000000  2240.000000  2240.000000   \n","unique           NaN           NaN           NaN          NaN          NaN   \n","top              NaN           NaN           NaN          NaN          NaN   \n","freq             NaN           NaN           NaN          NaN          NaN   \n","mean        0.072768      0.064286      0.013393     0.149107     0.009375   \n","min         0.000000      0.000000      0.000000     0.000000     0.000000   \n","25%         0.000000      0.000000      0.000000     0.000000     0.000000   \n","50%         0.000000      0.000000      0.000000     0.000000     0.000000   \n","75%         0.000000      0.000000      0.000000     0.000000     0.000000   \n","max         1.000000      1.000000      1.000000     1.000000     1.000000   \n","std         0.259813      0.245316      0.114976     0.356274     0.096391   \n","\n","       Country          Age    childhome  \n","count     2240  2191.000000  2240.000000  \n","unique       8          NaN          NaN  \n","top      Spain          NaN          NaN  \n","freq      1095          NaN          NaN  \n","mean       NaN    44.219534     0.950446  \n","min        NaN    16.000000     0.000000  \n","25%        NaN    36.000000     0.000000  \n","50%        NaN    43.000000     1.000000  \n","75%        NaN    54.000000     1.000000  \n","max        NaN    82.000000     3.000000  \n","std        NaN    11.796861     0.751803  "],"text/html":["\n","  <div id=\"df-103993b7-fd82-4e0c-b88e-c331ac330824\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Year_Birth</th>\n","      <th>Education</th>\n","      <th>Marital_Status</th>\n","      <th>Income</th>\n","      <th>Dt_Customer</th>\n","      <th>Recency</th>\n","      <th>MntWines</th>\n","      <th>MntFruits</th>\n","      <th>MntMeatProducts</th>\n","      <th>MntFishProducts</th>\n","      <th>MntSweetProducts</th>\n","      <th>MntGoldProds</th>\n","      <th>NumDealsPurchases</th>\n","      <th>NumWebPurchases</th>\n","      <th>NumCatalogPurchases</th>\n","      <th>NumStorePurchases</th>\n","      <th>NumWebVisitsMonth</th>\n","      <th>AcceptedCmp3</th>\n","      <th>AcceptedCmp4</th>\n","      <th>AcceptedCmp5</th>\n","      <th>AcceptedCmp1</th>\n","      <th>AcceptedCmp2</th>\n","      <th>Response</th>\n","      <th>Complain</th>\n","      <th>Country</th>\n","      <th>Age</th>\n","      <th>childhome</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240</td>\n","      <td>2240</td>\n","      <td>2240.000000</td>\n","      <td>2240</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240.000000</td>\n","      <td>2240</td>\n","      <td>2191.000000</td>\n","      <td>2240.000000</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5</td>\n","      <td>8</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Graduation</td>\n","      <td>Married</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Spain</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1127</td>\n","      <td>864</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1095</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>5592.159821</td>\n","      <td>1968.852232</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>52019.434116</td>\n","      <td>2013-07-10 10:01:42.857142784</td>\n","      <td>49.109375</td>\n","      <td>303.935714</td>\n","      <td>26.302232</td>\n","      <td>166.950000</td>\n","      <td>37.525446</td>\n","      <td>27.062946</td>\n","      <td>44.021875</td>\n","      <td>2.325000</td>\n","      <td>4.084821</td>\n","      <td>2.662054</td>\n","      <td>5.790179</td>\n","      <td>5.316518</td>\n","      <td>0.072768</td>\n","      <td>0.074554</td>\n","      <td>0.072768</td>\n","      <td>0.064286</td>\n","      <td>0.013393</td>\n","      <td>0.149107</td>\n","      <td>0.009375</td>\n","      <td>NaN</td>\n","      <td>44.219534</td>\n","      <td>0.950446</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>1932.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3000.000000</td>\n","      <td>2012-07-30 00:00:00</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>16.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2828.250000</td>\n","      <td>1959.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>35538.750000</td>\n","      <td>2013-01-16 00:00:00</td>\n","      <td>24.000000</td>\n","      <td>23.750000</td>\n","      <td>1.000000</td>\n","      <td>16.000000</td>\n","      <td>3.000000</td>\n","      <td>1.000000</td>\n","      <td>9.000000</td>\n","      <td>1.000000</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>3.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>36.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>5458.500000</td>\n","      <td>1970.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>51741.500000</td>\n","      <td>2013-07-08 12:00:00</td>\n","      <td>49.000000</td>\n","      <td>173.500000</td>\n","      <td>8.000000</td>\n","      <td>67.000000</td>\n","      <td>12.000000</td>\n","      <td>8.000000</td>\n","      <td>24.000000</td>\n","      <td>2.000000</td>\n","      <td>4.000000</td>\n","      <td>2.000000</td>\n","      <td>5.000000</td>\n","      <td>6.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>43.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>8427.750000</td>\n","      <td>1977.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>68289.750000</td>\n","      <td>2013-12-30 06:00:00</td>\n","      <td>74.000000</td>\n","      <td>504.250000</td>\n","      <td>33.000000</td>\n","      <td>232.000000</td>\n","      <td>50.000000</td>\n","      <td>33.000000</td>\n","      <td>56.000000</td>\n","      <td>3.000000</td>\n","      <td>6.000000</td>\n","      <td>4.000000</td>\n","      <td>8.000000</td>\n","      <td>7.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>54.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>11191.000000</td>\n","      <td>1996.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>162397.000000</td>\n","      <td>2014-06-29 00:00:00</td>\n","      <td>99.000000</td>\n","      <td>1493.000000</td>\n","      <td>199.000000</td>\n","      <td>1725.000000</td>\n","      <td>259.000000</td>\n","      <td>263.000000</td>\n","      <td>362.000000</td>\n","      <td>15.000000</td>\n","      <td>27.000000</td>\n","      <td>28.000000</td>\n","      <td>13.000000</td>\n","      <td>20.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>NaN</td>\n","      <td>82.000000</td>\n","      <td>3.000000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>3246.662198</td>\n","      <td>11.771725</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>21525.283094</td>\n","      <td>NaN</td>\n","      <td>28.962453</td>\n","      <td>336.597393</td>\n","      <td>39.773434</td>\n","      <td>225.715373</td>\n","      <td>54.628979</td>\n","      <td>41.280498</td>\n","      <td>52.167439</td>\n","      <td>1.932238</td>\n","      <td>2.778714</td>\n","      <td>2.923101</td>\n","      <td>3.250958</td>\n","      <td>2.426645</td>\n","      <td>0.259813</td>\n","      <td>0.262728</td>\n","      <td>0.259813</td>\n","      <td>0.245316</td>\n","      <td>0.114976</td>\n","      <td>0.356274</td>\n","      <td>0.096391</td>\n","      <td>NaN</td>\n","      <td>11.796861</td>\n","      <td>0.751803</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-103993b7-fd82-4e0c-b88e-c331ac330824')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-103993b7-fd82-4e0c-b88e-c331ac330824 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-103993b7-fd82-4e0c-b88e-c331ac330824');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bbef75ad-0e89-4c8c-b7ec-923567939104\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bbef75ad-0e89-4c8c-b7ec-923567939104')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bbef75ad-0e89-4c8c-b7ec-923567939104 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":58}]},{"cell_type":"code","source":["#Education,Income,Marital_Status,Recency,Age,childhome"],"metadata":{"id":"RlZ5FBW1akgE","executionInfo":{"status":"ok","timestamp":1718869223292,"user_tz":-330,"elapsed":38,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}}},"execution_count":59,"outputs":[]},{"cell_type":"code","source":["print(f\"The average customer's education level is {df['Education'].mode()[0]}.\")\n","print('-------------------------------------------------------------------------------------------------------------------------------------------------')\n","print(f\"The average customer's income is between {df['Income'].quantile(0.45)} and {df['Income'].quantile(0.55)}.\")\n","print('-------------------------------------------------------------------------------------------------------------------------------------------------')\n","print(f\"The average customer is {df['Marital_Status'].mode()[0]}.\")\n","print('-------------------------------------------------------------------------------------------------------------------------------------------------')\n","print(f\"The average customer's most recent purchase was {round(df['Recency'].mean(),0)} days ago.\")\n","print('-------------------------------------------------------------------------------------------------------------------------------------------------')\n","print(f\"The average age of customer is between {df['Age'].quantile(0.45)} and {df['Age'].quantile(0.55)}.\")\n","print('-------------------------------------------------------------------------------------------------------------------------------------------------')\n","print(f\"The average customer has {df['childhome'].mode()[0]} child at home.\")\n","print(f\"------------------------------------------------------------------------------------------------------------------------------------------------\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FTgDdbymbcKW","executionInfo":{"status":"ok","timestamp":1718869223293,"user_tz":-330,"elapsed":38,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}},"outputId":"9311b930-28d7-46a8-abec-f5319d8961e0"},"execution_count":60,"outputs":[{"output_type":"stream","name":"stdout","text":["The average customer's education level is Graduation.\n","-------------------------------------------------------------------------------------------------------------------------------------------------\n","The average customer's income is between 48432.0 and 54690.0.\n","-------------------------------------------------------------------------------------------------------------------------------------------------\n","The average customer is Married.\n","-------------------------------------------------------------------------------------------------------------------------------------------------\n","The average customer's most recent purchase was 49.0 days ago.\n","-------------------------------------------------------------------------------------------------------------------------------------------------\n","The average age of customer is between 42.0 and 45.0.\n","-------------------------------------------------------------------------------------------------------------------------------------------------\n","The average customer has 1 child at home.\n","------------------------------------------------------------------------------------------------------------------------------------------------\n"]}]},{"cell_type":"markdown","source":["## 5.Which products are performing best?"],"metadata":{"id":"KirTvbnYoPWj"}},{"cell_type":"code","source":["products = df[['MntWines','MntFruits','MntMeatProducts','MntFishProducts','MntSweetProducts','MntGoldProds']]\n","products.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"IG80ZcrtcEF1","executionInfo":{"status":"ok","timestamp":1718869223293,"user_tz":-330,"elapsed":36,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}},"outputId":"b8d30aec-594e-4579-858c-355cef0d259e"},"execution_count":61,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   MntWines  MntFruits  MntMeatProducts  MntFishProducts  MntSweetProducts  \\\n","0       189        104              379              111               189   \n","1       464          5               64                7                 0   \n","2       134         11               59               15                 2   \n","3        10          0                1                0                 0   \n","4         6         16               24               11                 0   \n","\n","   MntGoldProds  \n","0           218  \n","1            37  \n","2            30  \n","3             0  \n","4            34  "],"text/html":["\n","  <div id=\"df-e9b1dd13-27f7-419b-8cf2-3ae17ddb4166\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MntWines</th>\n","      <th>MntFruits</th>\n","      <th>MntMeatProducts</th>\n","      <th>MntFishProducts</th>\n","      <th>MntSweetProducts</th>\n","      <th>MntGoldProds</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>189</td>\n","      <td>104</td>\n","      <td>379</td>\n","      <td>111</td>\n","      <td>189</td>\n","      <td>218</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>464</td>\n","      <td>5</td>\n","      <td>64</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>134</td>\n","      <td>11</td>\n","      <td>59</td>\n","      <td>15</td>\n","      <td>2</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>6</td>\n","      <td>16</td>\n","      <td>24</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>34</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e9b1dd13-27f7-419b-8cf2-3ae17ddb4166')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e9b1dd13-27f7-419b-8cf2-3ae17ddb4166 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e9b1dd13-27f7-419b-8cf2-3ae17ddb4166');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ad3e879c-6132-4893-8d55-93ef124938c8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ad3e879c-6132-4893-8d55-93ef124938c8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ad3e879c-6132-4893-8d55-93ef124938c8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"products","summary":"{\n  \"name\": \"products\",\n  \"rows\": 2240,\n  \"fields\": [\n    {\n      \"column\": \"MntWines\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 336,\n        \"min\": 0,\n        \"max\": 1493,\n        \"num_unique_values\": 776,\n        \"samples\": [\n          671,\n          553,\n          899\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MntFruits\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 39,\n        \"min\": 0,\n        \"max\": 199,\n        \"num_unique_values\": 158,\n        \"samples\": [\n          161,\n          34,\n          41\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MntMeatProducts\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 225,\n        \"min\": 0,\n        \"max\": 1725,\n        \"num_unique_values\": 558,\n        \"samples\": [\n          278,\n          304,\n          431\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MntFishProducts\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 54,\n        \"min\": 0,\n        \"max\": 259,\n        \"num_unique_values\": 182,\n        \"samples\": [\n          43,\n          76,\n          237\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MntSweetProducts\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 41,\n        \"min\": 0,\n        \"max\": 263,\n        \"num_unique_values\": 177,\n        \"samples\": [\n          172,\n          123,\n          84\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MntGoldProds\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 52,\n        \"min\": 0,\n        \"max\": 362,\n        \"num_unique_values\": 213,\n        \"samples\": [\n          26,\n          131,\n          48\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["dict1 = {}\n","dict1['products'] = [i for i in products.columns]\n","dict1['total_earnings'] = [products[i].sum() for i in products.columns]"],"metadata":{"id":"ZuDzwIhHobMJ","executionInfo":{"status":"ok","timestamp":1718869223293,"user_tz":-330,"elapsed":34,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}}},"execution_count":62,"outputs":[]},{"cell_type":"code","source":["products_df = pd.DataFrame(dict1)\n","products_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"KG_yTasKo0H8","executionInfo":{"status":"ok","timestamp":1718869223294,"user_tz":-330,"elapsed":35,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}},"outputId":"1d2f1632-87f4-43ce-b9a1-7fc47e6a7d5f"},"execution_count":63,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           products  total_earnings\n","0          MntWines          680816\n","1         MntFruits           58917\n","2   MntMeatProducts          373968\n","3   MntFishProducts           84057\n","4  MntSweetProducts           60621\n","5      MntGoldProds           98609"],"text/html":["\n","  <div id=\"df-2a1ae704-b6e7-4994-a0ed-8d3ae16430f2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>products</th>\n","      <th>total_earnings</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>MntWines</td>\n","      <td>680816</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>MntFruits</td>\n","      <td>58917</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>MntMeatProducts</td>\n","      <td>373968</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>MntFishProducts</td>\n","      <td>84057</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>MntSweetProducts</td>\n","      <td>60621</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>MntGoldProds</td>\n","      <td>98609</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2a1ae704-b6e7-4994-a0ed-8d3ae16430f2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2a1ae704-b6e7-4994-a0ed-8d3ae16430f2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2a1ae704-b6e7-4994-a0ed-8d3ae16430f2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5c044ea4-8398-4c76-b9b0-a090c15d662d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5c044ea4-8398-4c76-b9b0-a090c15d662d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5c044ea4-8398-4c76-b9b0-a090c15d662d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"products_df","summary":"{\n  \"name\": \"products_df\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"products\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"MntWines\",\n          \"MntFruits\",\n          \"MntGoldProds\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_earnings\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 253138,\n        \"min\": 58917,\n        \"max\": 680816,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          680816,\n          58917,\n          98609\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["figure = plt.figure(figsize = (10,5))\n","ax = sns.barplot(data = products_df, x = 'products', y = 'total_earnings')\n","plt.xticks(rotation = 45)\n","ax.bar_label(ax.containers[0]);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":552},"id":"GzZ5gybPo7r3","executionInfo":{"status":"ok","timestamp":1718869223294,"user_tz":-330,"elapsed":34,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}},"outputId":"da2cf672-cba5-4b94-f063-025ba7205f65"},"execution_count":64,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### **Inference**\n","1. Wines are exceptionally well generating revenue around `6.8 lakhs`followed by Meat Products with revenue of `3.7 lakhs`."],"metadata":{"id":"ZC-qnFfspl3y"}},{"cell_type":"markdown","source":["## 6. Which channels are underperforming?"],"metadata":{"id":"I1d1aJNuqO69"}},{"cell_type":"code","source":["channel = df[['NumDealsPurchases','NumWebPurchases','NumCatalogPurchases','NumStorePurchases']]\n","channel.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"pZ0FSqI4phhm","executionInfo":{"status":"ok","timestamp":1718869223294,"user_tz":-330,"elapsed":33,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}},"outputId":"55aa0d27-9d3a-41a1-f37a-857572f15d85"},"execution_count":65,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   NumDealsPurchases  NumWebPurchases  NumCatalogPurchases  NumStorePurchases\n","0                  1                4                    4                  6\n","1                  1                7                    3                  7\n","2                  1                3                    2                  5\n","3                  1                1                    0                  2\n","4                  2                3                    1                  2"],"text/html":["\n","  <div id=\"df-ed1b0e71-bbe6-48c5-a58a-afb01bb7102c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>NumDealsPurchases</th>\n","      <th>NumWebPurchases</th>\n","      <th>NumCatalogPurchases</th>\n","      <th>NumStorePurchases</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ed1b0e71-bbe6-48c5-a58a-afb01bb7102c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ed1b0e71-bbe6-48c5-a58a-afb01bb7102c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ed1b0e71-bbe6-48c5-a58a-afb01bb7102c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-810dd322-54cd-410f-80d2-a1eaee065834\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-810dd322-54cd-410f-80d2-a1eaee065834')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-810dd322-54cd-410f-80d2-a1eaee065834 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"channel","summary":"{\n  \"name\": \"channel\",\n  \"rows\": 2240,\n  \"fields\": [\n    {\n      \"column\": \"NumDealsPurchases\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 15,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          11,\n          8,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NumWebPurchases\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 27,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          8,\n          0,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NumCatalogPurchases\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 28,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          5,\n          11,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NumStorePurchases\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 0,\n        \"max\": 13,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          4,\n          12,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":65}]},{"cell_type":"code","source":["dict2 = {}\n","dict2['Channels'] = [i[3:] for i in channel.columns]\n","dict2 ['Performance'] = [channel[i].sum() for i in channel.columns]"],"metadata":{"id":"igX-wg9VqYTr","executionInfo":{"status":"ok","timestamp":1718870648447,"user_tz":-330,"elapsed":420,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}}},"execution_count":73,"outputs":[]},{"cell_type":"code","source":["channel_df = pd.DataFrame(dict2)\n","channel_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"5pQ0mobNqrZ2","executionInfo":{"status":"ok","timestamp":1718870650164,"user_tz":-330,"elapsed":5,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}},"outputId":"f7b2cadd-5d1e-4d29-e1f9-595028f8cc96"},"execution_count":74,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Channels  Performance\n","0    DealsPurchases         5208\n","1      WebPurchases         9150\n","2  CatalogPurchases         5963\n","3    StorePurchases        12970"],"text/html":["\n","  <div id=\"df-97d5d22b-d8bb-497c-b1ba-c5e8bde8679c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Channels</th>\n","      <th>Performance</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>DealsPurchases</td>\n","      <td>5208</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>WebPurchases</td>\n","      <td>9150</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CatalogPurchases</td>\n","      <td>5963</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>StorePurchases</td>\n","      <td>12970</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-97d5d22b-d8bb-497c-b1ba-c5e8bde8679c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-97d5d22b-d8bb-497c-b1ba-c5e8bde8679c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-97d5d22b-d8bb-497c-b1ba-c5e8bde8679c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cb61b08a-0070-4e89-af35-badb73807e54\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cb61b08a-0070-4e89-af35-badb73807e54')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cb61b08a-0070-4e89-af35-badb73807e54 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"channel_df","summary":"{\n  \"name\": \"channel_df\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Channels\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"WebPurchases\",\n          \"StorePurchases\",\n          \"DealsPurchases\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Performance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3537,\n        \"min\": 5208,\n        \"max\": 12970,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          9150,\n          12970,\n          5208\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":["figure = plt.figure(figsize = (10,5))\n","ax = sns.barplot(data = channel_df, x ='Channels', y = 'Performance')\n","plt.xticks(rotation = 45)\n","ax.bar_label(ax.containers[0]);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":548},"id":"PM1Zz-J4qu0M","executionInfo":{"status":"ok","timestamp":1718870660030,"user_tz":-330,"elapsed":1688,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}},"outputId":"6c130cf0-6c28-4c69-9b7c-be8d4086dbd3"},"execution_count":76,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### **Inference**\n","1. The number of `Deal Purchases` is underperforming compared to the other channels, with a performance rate of `5208`."],"metadata":{"id":"mLhtc4VyrUT1"}},{"cell_type":"code","source":[],"metadata":{"id":"zxcjbgA3rPb4","executionInfo":{"status":"ok","timestamp":1718869224134,"user_tz":-330,"elapsed":9,"user":{"displayName":"Vaishnavi Sawant","userId":"16310654928114766926"}}},"execution_count":68,"outputs":[]}],"metadata":{"colab":{"provenance":[],"mount_file_id":"1XPJE8GLNbS-DWmbGjCKo8_cCQdQ8F5uR","authorship_tag":"ABX9TyN/TKZ7jFt+2ccpmjyQS+Vp"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}